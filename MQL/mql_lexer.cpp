/* Generated by re2c 0.14.3 on Fri Jun  8 17:22:22 2018 */
#line 1 "./mql.re"
/*
 * mql.re
 *
 * MQL Lexer based on re2c
 *
 * Ulrik Petersen
 * Created: 6/23-2007
 * Last update: 5/28-2018
 *
 */
/************************************************************************
 *
 *   Emdros - the database engine for analyzed or annotated text
 *   Copyright (C) 2001-2018  Ulrik Sandborg-Petersen
 *
 *   This program is free software; you can redistribute it and/or
 *   modify it under the terms of the GNU General Public License as
 *   published by the Free Software Foundation, license version 2.  
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *   General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program; if not, write to the Free Software
 *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
 *   02111-1307 USA
 *
 *
 *   Special exception
 *   =================
 * 
 *   In addition, as a special exception, Ulrik Petersen, the
 *   copyright holder of Emdros, gives permission to link Emdros, in
 *   whole or in part, with the libraries which are normally
 *   distributed with:
 *   
 *   a) Sun's Java platform,
 *   b) Python, 
 *   c) Jython,
 *   d) Ruby, and/or 
 *   e) Perl 
 *   f) PostgreSQL
 *   g) OpenSSL
 *
 *   (or with modified versions of these), and to distribute linked
 *   combinations including both Emdros, in whole or in part, and one
 *   or more of the libraries normally distributed with (a)-(g) above.
 *
 *   Please note: This gives you special rights concerning the
 *   libraries which normally accompany the above pieces of software.
 *   It gives you no special rights concerning software that you write
 *   yourself.  You must obey the GNU General Public License in all
 *   respects for all of the code used other than the libraries
 *   normally distributed with (a)-(g) above.
 *
 *   If you modify this file, you may extend this exception to your
 *   version of the file, but you are not obligated to do so. If you
 *   do not wish to do so, delete this exception statement from your
 *   version.
 *
 *
 *   Other licensing forms
 *   =====================
 *
 *   If you wish to negotiate commercial licensing, please contact
 *   Ulrik Petersen at ulrikp[at]users.sourceforge.net.
 *
 *   Licensing can also be negotiated if your organization is an
 *   educational, non-profit, charity, missionary or similar
 *   organization.
 *
 *
 *   Website
 *   =======
 *
 *   Emdros has a website here:
 *
 *   http://emdros.org
 *
 *
 *
 **************************************************************************/

/**@file mql_lexer.re
 *@brief Implementation file for MQL Lexer (MQL layer)
 */

#include <mql_lexer.h>
#include <mqlpars.h>
#include <iostream>
#include <string_func.h>

#undef YYCTYPE
#undef YYCURSOR
#undef YYLIMIT
#undef YYMARKER

#define YYCTYPE         unsigned char
#define YYCURSOR        cur
#define YYLIMIT         lim
#define YYMARKER        ptr
#line 107 "./mql.re"



#line 142 "./mql.re"



MQLScanner::MQLScanner(const std::string& strIn)
{
	sz = strIn.c_str();
	lim = sz + strIn.length();
	bot = tok = ptr = pos = top = eof = 0;
	cur = sz;
}

MQLScanner::~MQLScanner()
{
	if (bot) {
		delete[] bot;
	}
}


#define MQL_TOKEN_RETURN(X,Y) { yylval->setName(X); return Y; }

int MQLScanner::scan(Token *pYYLVAL)
{
	yylval = pYYLVAL;

 scan:	
	tok = cur;


#line 141 "./mql_lexer.cpp"
{
	YYCTYPE yych;

	yych = *YYCURSOR;
	switch (yych) {
	case 0x00:	goto xx76;
	case '\t':	goto xx70;
	case '\n':	goto xx74;
	case '\r':	goto xx72;
	case ' ':	goto xx68;
	case '!':	goto xx35;
	case '"':	goto xx64;
	case '\'':	goto xx66;
	case '(':	goto xx45;
	case ')':	goto xx47;
	case '*':	goto xx55;
	case ',':	goto xx53;
	case '-':	goto xx57;
	case '.':	goto xx23;
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto xx62;
	case ':':	goto xx49;
	case ';':	goto xx51;
	case '<':	goto xx29;
	case '=':	goto xx27;
	case '>':	goto xx31;
	case 'A':
	case 'a':	goto xx10;
	case 'B':
	case 'b':	goto xx11;
	case 'C':
	case 'c':	goto xx2;
	case 'D':
	case 'd':	goto xx6;
	case 'E':
	case 'e':	goto xx17;
	case 'F':
	case 'f':	goto xx16;
	case 'G':
	case 'g':	goto xx7;
	case 'H':
	case 'h':	goto xx19;
	case 'I':
	case 'i':	goto xx8;
	case 'J':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'j':
	case 'x':
	case 'y':
	case 'z':	goto xx59;
	case 'K':
	case 'k':	goto xx21;
	case 'L':
	case 'l':	goto xx14;
	case 'M':
	case 'm':	goto xx18;
	case 'N':
	case 'n':	goto xx22;
	case 'O':
	case 'o':	goto xx13;
	case 'P':
	case 'p':	goto xx26;
	case 'Q':
	case 'q':	goto xx25;
	case 'R':
	case 'r':	goto xx15;
	case 'S':
	case 's':	goto xx5;
	case 'T':
	case 't':	goto xx12;
	case 'U':
	case 'u':	goto xx4;
	case 'V':
	case 'v':	goto xx9;
	case 'W':
	case 'w':	goto xx20;
	case '[':	goto xx37;
	case ']':	goto xx39;
	case '`':	goto xx60;
	case '{':	goto xx41;
	case '}':	goto xx43;
	case '~':	goto xx33;
	default:	goto xx78;
	}
xx2:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'R') {
		if (yych <= 'N') {
			if (yych == 'A') goto xx577;
			goto xx104;
		} else {
			if (yych <= 'O') goto xx578;
			if (yych <= 'Q') goto xx104;
			goto xx579;
		}
	} else {
		if (yych <= 'n') {
			if (yych == 'a') goto xx577;
			goto xx104;
		} else {
			if (yych <= 'o') goto xx578;
			if (yych == 'r') goto xx579;
			goto xx104;
		}
	}
xx3:
#line 299 "./mql.re"
	{ addToken();
			      MQL_TOKEN_RETURN(STRING_MAGIC, T_IDENTIFIER);
			    }
#line 263 "./mql_lexer.cpp"
xx4:
	yych = *++YYCURSOR;
	if (yych <= 'S') {
		if (yych <= 'O') {
			if (yych == 'N') goto xx536;
			goto xx104;
		} else {
			if (yych <= 'P') goto xx537;
			if (yych <= 'R') goto xx104;
			goto xx538;
		}
	} else {
		if (yych <= 'o') {
			if (yych == 'n') goto xx536;
			goto xx104;
		} else {
			if (yych <= 'p') goto xx537;
			if (yych == 's') goto xx538;
			goto xx104;
		}
	}
xx5:
	yych = *++YYCURSOR;
	if (yych <= 'U') {
		if (yych <= 'H') {
			if (yych == 'E') goto xx484;
			if (yych <= 'G') goto xx104;
			goto xx485;
		} else {
			if (yych <= 'I') goto xx486;
			if (yych <= 'S') goto xx104;
			if (yych <= 'T') goto xx487;
			goto xx488;
		}
	} else {
		if (yych <= 'h') {
			if (yych == 'e') goto xx484;
			if (yych <= 'g') goto xx104;
			goto xx485;
		} else {
			if (yych <= 's') {
				if (yych <= 'i') goto xx486;
				goto xx104;
			} else {
				if (yych <= 't') goto xx487;
				if (yych <= 'u') goto xx488;
				goto xx104;
			}
		}
	}
xx6:
	yych = *++YYCURSOR;
	if (yych <= 'R') {
		if (yych <= 'E') {
			if (yych == 'A') goto xx450;
			if (yych <= 'D') goto xx104;
			goto xx451;
		} else {
			if (yych == 'I') goto xx452;
			if (yych <= 'Q') goto xx104;
			goto xx453;
		}
	} else {
		if (yych <= 'e') {
			if (yych == 'a') goto xx450;
			if (yych <= 'd') goto xx104;
			goto xx451;
		} else {
			if (yych <= 'i') {
				if (yych <= 'h') goto xx104;
				goto xx452;
			} else {
				if (yych == 'r') goto xx453;
				goto xx104;
			}
		}
	}
xx7:
	yych = *++YYCURSOR;
	if (yych <= 'O') {
		if (yych <= 'D') {
			if (yych == 'A') goto xx440;
			goto xx104;
		} else {
			if (yych <= 'E') goto xx441;
			if (yych <= 'N') goto xx104;
			goto xx442;
		}
	} else {
		if (yych <= 'd') {
			if (yych == 'a') goto xx440;
			goto xx104;
		} else {
			if (yych <= 'e') goto xx441;
			if (yych == 'o') goto xx442;
			goto xx104;
		}
	}
xx8:
	yych = *++YYCURSOR;
	if (yych <= 'N') {
		if (yych <= 'E') {
			if (yych == 'D') goto xx397;
			goto xx104;
		} else {
			if (yych <= 'F') goto xx398;
			if (yych <= 'M') goto xx104;
			goto xx400;
		}
	} else {
		if (yych <= 'e') {
			if (yych == 'd') goto xx397;
			goto xx104;
		} else {
			if (yych <= 'f') goto xx398;
			if (yych == 'n') goto xx400;
			goto xx104;
		}
	}
xx9:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx391;
	if (yych == 'a') goto xx391;
	goto xx104;
xx10:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'B':
	case 'b':	goto xx354;
	case 'D':
	case 'd':	goto xx355;
	case 'G':
	case 'g':	goto xx356;
	case 'L':
	case 'l':	goto xx357;
	case 'N':
	case 'n':	goto xx358;
	case 'S':
	case 's':	goto xx359;
	case 'T':
	case 't':	goto xx361;
	default:	goto xx104;
	}
xx11:
	yych = *++YYCURSOR;
	if (yych <= 'Y') {
		if (yych == 'E') goto xx341;
		if (yych <= 'X') goto xx104;
		goto xx342;
	} else {
		if (yych <= 'e') {
			if (yych <= 'd') goto xx104;
			goto xx341;
		} else {
			if (yych == 'y') goto xx342;
			goto xx104;
		}
	}
xx12:
	yych = *++YYCURSOR;
	if (yych <= 'Y') {
		if (yych == 'R') goto xx324;
		if (yych <= 'X') goto xx104;
		goto xx325;
	} else {
		if (yych <= 'r') {
			if (yych <= 'q') goto xx104;
			goto xx324;
		} else {
			if (yych == 'y') goto xx325;
			goto xx104;
		}
	}
xx13:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'B':
	case 'b':	goto xx303;
	case 'F':
	case 'f':	goto xx304;
	case 'N':
	case 'n':	goto xx306;
	case 'R':
	case 'r':	goto xx308;
	case 'V':
	case 'v':	goto xx310;
	default:	goto xx104;
	}
xx14:
	yych = *++YYCURSOR;
	if (yych <= 'I') {
		if (yych == 'A') goto xx295;
		if (yych <= 'H') goto xx104;
		goto xx296;
	} else {
		if (yych <= 'a') {
			if (yych <= '`') goto xx104;
			goto xx295;
		} else {
			if (yych == 'i') goto xx296;
			goto xx104;
		}
	}
xx15:
	yych = *++YYCURSOR;
	if (yych <= 'E') {
		if (yych == 'A') goto xx264;
		if (yych <= 'D') goto xx104;
		goto xx265;
	} else {
		if (yych <= 'a') {
			if (yych <= '`') goto xx104;
			goto xx264;
		} else {
			if (yych == 'e') goto xx265;
			goto xx104;
		}
	}
xx16:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'E':
	case 'e':	goto xx233;
	case 'I':
	case 'i':	goto xx234;
	case 'L':
	case 'l':	goto xx235;
	case 'O':
	case 'o':	goto xx236;
	case 'R':
	case 'r':	goto xx237;
	case 'U':
	case 'u':	goto xx238;
	default:	goto xx104;
	}
xx17:
	yych = *++YYCURSOR;
	if (yych <= 'X') {
		if (yych == 'N') goto xx206;
		if (yych <= 'W') goto xx104;
		goto xx207;
	} else {
		if (yych <= 'n') {
			if (yych <= 'm') goto xx104;
			goto xx206;
		} else {
			if (yych == 'x') goto xx207;
			goto xx104;
		}
	}
xx18:
	yych = *++YYCURSOR;
	if (yych <= 'U') {
		if (yych <= 'I') {
			if (yych == 'A') goto xx179;
			if (yych <= 'H') goto xx104;
			goto xx180;
		} else {
			if (yych == 'O') goto xx181;
			if (yych <= 'T') goto xx104;
			goto xx182;
		}
	} else {
		if (yych <= 'i') {
			if (yych == 'a') goto xx179;
			if (yych <= 'h') goto xx104;
			goto xx180;
		} else {
			if (yych <= 'o') {
				if (yych <= 'n') goto xx104;
				goto xx181;
			} else {
				if (yych == 'u') goto xx182;
				goto xx104;
			}
		}
	}
xx19:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx171;
	if (yych == 'a') goto xx171;
	goto xx104;
xx20:
	yych = *++YYCURSOR;
	if (yych <= 'I') {
		if (yych <= 'G') goto xx104;
		if (yych <= 'H') goto xx158;
		goto xx159;
	} else {
		if (yych <= 'g') goto xx104;
		if (yych <= 'h') goto xx158;
		if (yych <= 'i') goto xx159;
		goto xx104;
	}
xx21:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx155;
	if (yych == 'e') goto xx155;
	goto xx104;
xx22:
	yych = *++YYCURSOR;
	if (yych <= 'O') {
		if (yych == 'I') goto xx132;
		if (yych <= 'N') goto xx104;
		goto xx133;
	} else {
		if (yych <= 'i') {
			if (yych <= 'h') goto xx104;
			goto xx132;
		} else {
			if (yych == 'o') goto xx133;
			goto xx104;
		}
	}
xx23:
	++YYCURSOR;
	if ((yych = *YYCURSOR) == '.') goto xx130;
#line 295 "./mql.re"
	{ MQL_TOKEN_RETURN(".", T_KEY_DOT); }
#line 583 "./mql_lexer.cpp"
xx25:
	yych = *++YYCURSOR;
	if (yych == 'U') goto xx126;
	if (yych == 'u') goto xx126;
	goto xx104;
xx26:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx119;
	if (yych == 'a') goto xx119;
	goto xx104;
xx27:
	++YYCURSOR;
	if ((yych = *YYCURSOR) == '<') goto xx117;
	if (yych == '>') goto xx115;
#line 275 "./mql.re"
	{ MQL_TOKEN_RETURN("=", T_KEY_EQUALS);  }
#line 600 "./mql_lexer.cpp"
xx29:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= '<') goto xx30;
	if (yych <= '=') goto xx111;
	if (yych <= '>') goto xx113;
xx30:
#line 276 "./mql.re"
	{ MQL_TOKEN_RETURN("<", T_KEY_LESS_THAN);  }
#line 609 "./mql_lexer.cpp"
xx31:
	++YYCURSOR;
	if ((yych = *YYCURSOR) == '=') goto xx109;
#line 277 "./mql.re"
	{ MQL_TOKEN_RETURN(">", T_KEY_GREATER_THAN);  }
#line 615 "./mql_lexer.cpp"
xx33:
	++YYCURSOR;
#line 283 "./mql.re"
	{ MQL_TOKEN_RETURN("~", T_KEY_TILDE); }
#line 620 "./mql_lexer.cpp"
xx35:
	++YYCURSOR;
	if ((yych = *YYCURSOR) == '~') goto xx107;
#line 298 "./mql.re"
	{ MQL_TOKEN_RETURN("!", T_KEY_EXCLAMATION); }
#line 626 "./mql_lexer.cpp"
xx37:
	++YYCURSOR;
#line 285 "./mql.re"
	{ MQL_TOKEN_RETURN("[", T_KEY_OPEN_SQUARE_BRACKET); }
#line 631 "./mql_lexer.cpp"
xx39:
	++YYCURSOR;
#line 286 "./mql.re"
	{ MQL_TOKEN_RETURN("]", T_KEY_CLOSE_SQUARE_BRACKET); }
#line 636 "./mql_lexer.cpp"
xx41:
	++YYCURSOR;
#line 287 "./mql.re"
	{ MQL_TOKEN_RETURN("{", T_KEY_OPEN_BRACE);  }
#line 641 "./mql_lexer.cpp"
xx43:
	++YYCURSOR;
#line 288 "./mql.re"
	{ MQL_TOKEN_RETURN("}", T_KEY_CLOSE_BRACE);  }
#line 646 "./mql_lexer.cpp"
xx45:
	++YYCURSOR;
#line 289 "./mql.re"
	{ MQL_TOKEN_RETURN("(", T_KEY_OPEN_BRACKET); }
#line 651 "./mql_lexer.cpp"
xx47:
	++YYCURSOR;
#line 290 "./mql.re"
	{ MQL_TOKEN_RETURN(")", T_KEY_CLOSE_BRACKET); }
#line 656 "./mql_lexer.cpp"
xx49:
	++YYCURSOR;
	if ((yych = *YYCURSOR) == '=') goto xx105;
#line 292 "./mql.re"
	{ MQL_TOKEN_RETURN(":", T_KEY_COLON); }
#line 662 "./mql_lexer.cpp"
xx51:
	++YYCURSOR;
#line 293 "./mql.re"
	{ MQL_TOKEN_RETURN(";", T_KEY_SEMICOLON); }
#line 667 "./mql_lexer.cpp"
xx53:
	++YYCURSOR;
#line 294 "./mql.re"
	{ MQL_TOKEN_RETURN(",", T_KEY_COMMA); }
#line 672 "./mql_lexer.cpp"
xx55:
	++YYCURSOR;
#line 296 "./mql.re"
	{ MQL_TOKEN_RETURN("*", T_KEY_STAR); }
#line 677 "./mql_lexer.cpp"
xx57:
	++YYCURSOR;
#line 297 "./mql.re"
	{ MQL_TOKEN_RETURN("-", T_KEY_DASH); }
#line 682 "./mql_lexer.cpp"
xx59:
	yych = *++YYCURSOR;
	goto xx104;
xx60:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= '^') {
		if (yych <= '@') goto xx61;
		if (yych <= 'Z') goto xx98;
	} else {
		if (yych == '`') goto xx61;
		if (yych <= 'z') goto xx98;
	}
xx61:
#line 319 "./mql.re"
	{ yylval->setChar(*tok);
	    MQL_TOKEN_RETURN(CHAR_MAGIC, *tok); }
#line 699 "./mql_lexer.cpp"
xx62:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= '/') goto xx63;
	if (yych <= '9') goto xx79;
xx63:
#line 304 "./mql.re"
	{ addInteger();
                              MQL_TOKEN_RETURN(INTEGER_MAGIC, T_INTEGER); }
#line 708 "./mql_lexer.cpp"
xx64:
	++YYCURSOR;
#line 306 "./mql.re"
	{ yylval->setString(new std::string);
			      yylval->pString->reserve(32);
			      goto stringdq; 
                            }
#line 716 "./mql_lexer.cpp"
xx66:
	++YYCURSOR;
#line 310 "./mql.re"
	{ yylval->setString(new std::string);
			      yylval->pString->reserve(32);
			      goto stringsq; 
			    }
#line 724 "./mql_lexer.cpp"
xx68:
	++YYCURSOR;
#line 314 "./mql.re"
	{ goto scan; }
#line 729 "./mql_lexer.cpp"
xx70:
	++YYCURSOR;
#line 315 "./mql.re"
	{ goto scan; }
#line 734 "./mql_lexer.cpp"
xx72:
	++YYCURSOR;
#line 316 "./mql.re"
	{ goto scan; }
#line 739 "./mql_lexer.cpp"
xx74:
	++YYCURSOR;
#line 317 "./mql.re"
	{ goto scan; }
#line 744 "./mql_lexer.cpp"
xx76:
	++YYCURSOR;
#line 318 "./mql.re"
	{ if (cur >= lim) { goto end; } }
#line 749 "./mql_lexer.cpp"
xx78:
	yych = *++YYCURSOR;
	goto xx61;
xx79:
	yych = *++YYCURSOR;
	if (yych <= '/') goto xx63;
	if (yych >= ':') goto xx63;
	yych = *++YYCURSOR;
	if (yych <= '/') goto xx63;
	if (yych >= ':') goto xx63;
	yych = *++YYCURSOR;
	if (yych <= '/') goto xx63;
	if (yych >= ':') goto xx63;
	yych = *++YYCURSOR;
	if (yych <= '/') goto xx63;
	if (yych >= ':') goto xx63;
	yych = *++YYCURSOR;
	if (yych <= '/') goto xx63;
	if (yych >= ':') goto xx63;
	yych = *++YYCURSOR;
	if (yych <= '/') goto xx63;
	if (yych >= ':') goto xx63;
	yych = *++YYCURSOR;
	if (yych <= '/') goto xx63;
	if (yych >= ':') goto xx63;
	yych = *++YYCURSOR;
	if (yych <= '/') goto xx63;
	if (yych >= ':') goto xx63;
	yych = *++YYCURSOR;
	if (yych <= '/') goto xx63;
	if (yych >= ':') goto xx63;
	yych = *++YYCURSOR;
	if (yych <= '/') goto xx63;
	if (yych >= ':') goto xx63;
	yych = *++YYCURSOR;
	if (yych <= '/') goto xx63;
	if (yych >= ':') goto xx63;
	yych = *++YYCURSOR;
	if (yych <= '/') goto xx63;
	if (yych >= ':') goto xx63;
	yych = *++YYCURSOR;
	if (yych <= '/') goto xx63;
	if (yych >= ':') goto xx63;
	yych = *++YYCURSOR;
	if (yych <= '/') goto xx63;
	if (yych >= ':') goto xx63;
	yych = *++YYCURSOR;
	if (yych <= '/') goto xx63;
	if (yych >= ':') goto xx63;
	yych = *++YYCURSOR;
	if (yych <= '/') goto xx63;
	if (yych >= ':') goto xx63;
	yych = *++YYCURSOR;
	if (yych <= '/') goto xx63;
	if (yych >= ':') goto xx63;
	yych = *++YYCURSOR;
	if (yych <= '/') goto xx63;
	if (yych >= ':') goto xx63;
	yych = *++YYCURSOR;
	goto xx63;
xx98:
	YYMARKER = ++YYCURSOR;
	yych = *YYCURSOR;
	if (yych <= 'Z') {
		if (yych <= '/') goto xx100;
		if (yych <= '9') goto xx98;
		if (yych >= 'A') goto xx98;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx98;
		} else {
			if (yych <= '`') goto xx101;
			if (yych <= 'z') goto xx98;
		}
	}
xx100:
#line 302 "./mql.re"
	{ addToken();
                                           MQL_TOKEN_RETURN("mark", T_MARK); }
#line 829 "./mql_lexer.cpp"
xx101:
	++YYCURSOR;
	yych = *YYCURSOR;
	if (yych <= '^') {
		if (yych <= '@') goto xx102;
		if (yych <= 'Z') goto xx98;
	} else {
		if (yych == '`') goto xx102;
		if (yych <= 'z') goto xx98;
	}
xx102:
	YYCURSOR = YYMARKER;
	goto xx100;
xx103:
	++YYCURSOR;
	yych = *YYCURSOR;
xx104:
	if (yych <= 'Z') {
		if (yych <= '/') goto xx3;
		if (yych <= '9') goto xx103;
		if (yych <= '@') goto xx3;
		goto xx103;
	} else {
		if (yych <= '_') {
			if (yych <= '^') goto xx3;
			goto xx103;
		} else {
			if (yych <= '`') goto xx3;
			if (yych <= 'z') goto xx103;
			goto xx3;
		}
	}
xx105:
	++YYCURSOR;
#line 291 "./mql.re"
	{ MQL_TOKEN_RETURN(":=", T_KEY_ASSIGN);  }
#line 866 "./mql_lexer.cpp"
xx107:
	++YYCURSOR;
#line 284 "./mql.re"
	{ MQL_TOKEN_RETURN("!~", T_KEY_NOT_TILDE); }
#line 871 "./mql_lexer.cpp"
xx109:
	++YYCURSOR;
#line 281 "./mql.re"
	{ MQL_TOKEN_RETURN(">=", T_KEY_GREATER_THAN_OR_EQUAL);  }
#line 876 "./mql_lexer.cpp"
xx111:
	++YYCURSOR;
#line 279 "./mql.re"
	{ MQL_TOKEN_RETURN("<=", T_KEY_LESS_THAN_OR_EQUAL);  }
#line 881 "./mql_lexer.cpp"
xx113:
	++YYCURSOR;
#line 278 "./mql.re"
	{ MQL_TOKEN_RETURN("<>", T_KEY_NOT_EQUAL);  }
#line 886 "./mql_lexer.cpp"
xx115:
	++YYCURSOR;
#line 282 "./mql.re"
	{ MQL_TOKEN_RETURN("=>", T_KEY_GREATER_THAN_OR_EQUAL);  }
#line 891 "./mql_lexer.cpp"
xx117:
	++YYCURSOR;
#line 280 "./mql.re"
	{ MQL_TOKEN_RETURN("=<", T_KEY_LESS_THAN_OR_EQUAL);  }
#line 896 "./mql_lexer.cpp"
xx119:
	yych = *++YYCURSOR;
	if (yych == 'R') goto xx120;
	if (yych != 'r') goto xx104;
xx120:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx121;
	if (yych != 't') goto xx104;
xx121:
	yych = *++YYCURSOR;
	if (yych != '_') goto xx104;
	yych = *++YYCURSOR;
	if (yych == 'O') goto xx123;
	if (yych != 'o') goto xx104;
xx123:
	yych = *++YYCURSOR;
	if (yych == 'F') goto xx124;
	if (yych != 'f') goto xx104;
xx124:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx125;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx125;
			if (yych <= 'z') goto xx103;
		}
	}
xx125:
#line 269 "./mql.re"
	{ MQL_TOKEN_RETURN("part_of", T_KEY_PART_OF); }
#line 932 "./mql_lexer.cpp"
xx126:
	yych = *++YYCURSOR;
	if (yych == 'I') goto xx127;
	if (yych != 'i') goto xx104;
xx127:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx128;
	if (yych != 't') goto xx104;
xx128:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx129;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx129;
			if (yych <= 'z') goto xx103;
		}
	}
xx129:
#line 264 "./mql.re"
	{ MQL_TOKEN_RETURN("quit", T_KEY_QUIT); }
#line 958 "./mql_lexer.cpp"
xx130:
	++YYCURSOR;
#line 246 "./mql.re"
	{ MQL_TOKEN_RETURN("..", T_KEY_POWER);  }
#line 963 "./mql_lexer.cpp"
xx132:
	yych = *++YYCURSOR;
	if (yych == 'L') goto xx153;
	if (yych == 'l') goto xx153;
	goto xx104;
xx133:
	yych = *++YYCURSOR;
	if (yych <= 'T') {
		if (yych == 'R') goto xx134;
		if (yych <= 'S') goto xx104;
		goto xx135;
	} else {
		if (yych <= 'r') {
			if (yych <= 'q') goto xx104;
		} else {
			if (yych == 't') goto xx135;
			goto xx104;
		}
	}
xx134:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx145;
	if (yych == 'e') goto xx145;
	goto xx104;
xx135:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '@') {
			if (yych <= '/') goto xx136;
			if (yych <= '9') goto xx103;
		} else {
			if (yych == 'E') goto xx137;
			goto xx103;
		}
	} else {
		if (yych <= '`') {
			if (yych == '_') goto xx103;
		} else {
			if (yych == 'e') goto xx137;
			if (yych <= 'z') goto xx103;
		}
	}
xx136:
#line 239 "./mql.re"
	{ MQL_TOKEN_RETURN("not", T_KEY_NOT);  }
#line 1009 "./mql_lexer.cpp"
xx137:
	yych = *++YYCURSOR;
	if (yych == 'X') goto xx138;
	if (yych != 'x') goto xx104;
xx138:
	yych = *++YYCURSOR;
	if (yych == 'I') goto xx139;
	if (yych != 'i') goto xx104;
xx139:
	yych = *++YYCURSOR;
	if (yych == 'S') goto xx140;
	if (yych != 's') goto xx104;
xx140:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx141;
	if (yych != 't') goto xx104;
xx141:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '@') {
			if (yych <= '/') goto xx142;
			if (yych <= '9') goto xx103;
		} else {
			if (yych == 'S') goto xx143;
			goto xx103;
		}
	} else {
		if (yych <= '`') {
			if (yych == '_') goto xx103;
		} else {
			if (yych == 's') goto xx143;
			if (yych <= 'z') goto xx103;
		}
	}
xx142:
#line 242 "./mql.re"
	{ MQL_TOKEN_RETURN("notexist", T_KEY_NOTEXIST);  }
#line 1047 "./mql_lexer.cpp"
xx143:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx144;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx144;
			if (yych <= 'z') goto xx103;
		}
	}
xx144:
#line 243 "./mql.re"
	{ MQL_TOKEN_RETURN("notexists", T_KEY_NOTEXISTS);  }
#line 1065 "./mql_lexer.cpp"
xx145:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx146;
	if (yych != 't') goto xx104;
xx146:
	yych = *++YYCURSOR;
	if (yych == 'R') goto xx147;
	if (yych != 'r') goto xx104;
xx147:
	yych = *++YYCURSOR;
	if (yych == 'I') goto xx148;
	if (yych != 'i') goto xx104;
xx148:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx149;
	if (yych != 'e') goto xx104;
xx149:
	yych = *++YYCURSOR;
	if (yych == 'V') goto xx150;
	if (yych != 'v') goto xx104;
xx150:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx151;
	if (yych != 'e') goto xx104;
xx151:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx152;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx152;
			if (yych <= 'z') goto xx103;
		}
	}
xx152:
#line 233 "./mql.re"
	{ MQL_TOKEN_RETURN("noretrieve", T_KEY_NORETRIEVE);  }
#line 1107 "./mql_lexer.cpp"
xx153:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx154;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx154;
			if (yych <= 'z') goto xx103;
		}
	}
xx154:
#line 249 "./mql.re"
	{ MQL_TOKEN_RETURN("nil", T_KEY_NIL);  }
#line 1125 "./mql_lexer.cpp"
xx155:
	yych = *++YYCURSOR;
	if (yych == 'Y') goto xx156;
	if (yych != 'y') goto xx104;
xx156:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx157;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx157;
			if (yych <= 'z') goto xx103;
		}
	}
xx157:
#line 232 "./mql.re"
	{ MQL_TOKEN_RETURN("key", T_KEY_KEY); }
#line 1147 "./mql_lexer.cpp"
xx158:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx167;
	if (yych == 'e') goto xx167;
	goto xx104;
xx159:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx160;
	if (yych != 't') goto xx104;
xx160:
	yych = *++YYCURSOR;
	if (yych == 'H') goto xx161;
	if (yych != 'h') goto xx104;
xx161:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '@') {
			if (yych <= '/') goto xx162;
			if (yych <= '9') goto xx103;
		} else {
			if (yych == 'O') goto xx163;
			goto xx103;
		}
	} else {
		if (yych <= '`') {
			if (yych == '_') goto xx103;
		} else {
			if (yych == 'o') goto xx163;
			if (yych <= 'z') goto xx103;
		}
	}
xx162:
#line 230 "./mql.re"
	{ MQL_TOKEN_RETURN("with", T_KEY_WITH);  }
#line 1182 "./mql_lexer.cpp"
xx163:
	yych = *++YYCURSOR;
	if (yych == 'U') goto xx164;
	if (yych != 'u') goto xx104;
xx164:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx165;
	if (yych != 't') goto xx104;
xx165:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx166;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx166;
			if (yych <= 'z') goto xx103;
		}
	}
xx166:
#line 231 "./mql.re"
	{ MQL_TOKEN_RETURN("without", T_KEY_WITHOUT);  }
#line 1208 "./mql_lexer.cpp"
xx167:
	yych = *++YYCURSOR;
	if (yych == 'R') goto xx168;
	if (yych != 'r') goto xx104;
xx168:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx169;
	if (yych != 'e') goto xx104;
xx169:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx170;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx170;
			if (yych <= 'z') goto xx103;
		}
	}
xx170:
#line 219 "./mql.re"
	{ MQL_TOKEN_RETURN("where", T_KEY_WHERE);  }
#line 1234 "./mql_lexer.cpp"
xx171:
	yych = *++YYCURSOR;
	if (yych <= 'V') {
		if (yych == 'S') goto xx172;
		if (yych <= 'U') goto xx104;
		goto xx174;
	} else {
		if (yych <= 's') {
			if (yych <= 'r') goto xx104;
		} else {
			if (yych == 'v') goto xx174;
			goto xx104;
		}
	}
xx172:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx173;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx173;
			if (yych <= 'z') goto xx103;
		}
	}
xx173:
#line 218 "./mql.re"
	{ MQL_TOKEN_RETURN("has", T_KEY_HAS);  }
#line 1266 "./mql_lexer.cpp"
xx174:
	yych = *++YYCURSOR;
	if (yych == 'I') goto xx175;
	if (yych != 'i') goto xx104;
xx175:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx176;
	if (yych != 'n') goto xx104;
xx176:
	yych = *++YYCURSOR;
	if (yych == 'G') goto xx177;
	if (yych != 'g') goto xx104;
xx177:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx178;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx178;
			if (yych <= 'z') goto xx103;
		}
	}
xx178:
#line 220 "./mql.re"
	{ MQL_TOKEN_RETURN("having", T_KEY_HAVING); }
#line 1296 "./mql_lexer.cpp"
xx179:
	yych = *++YYCURSOR;
	if (yych == 'X') goto xx201;
	if (yych == 'x') goto xx201;
	goto xx104;
xx180:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx196;
	if (yych == 'n') goto xx196;
	goto xx104;
xx181:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx190;
	if (yych == 'n') goto xx190;
	goto xx104;
xx182:
	yych = *++YYCURSOR;
	if (yych == 'L') goto xx183;
	if (yych != 'l') goto xx104;
xx183:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx184;
	if (yych != 't') goto xx104;
xx184:
	yych = *++YYCURSOR;
	if (yych == 'I') goto xx185;
	if (yych != 'i') goto xx104;
xx185:
	yych = *++YYCURSOR;
	if (yych == 'P') goto xx186;
	if (yych != 'p') goto xx104;
xx186:
	yych = *++YYCURSOR;
	if (yych == 'L') goto xx187;
	if (yych != 'l') goto xx104;
xx187:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx188;
	if (yych != 'e') goto xx104;
xx188:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx189;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx189;
			if (yych <= 'z') goto xx103;
		}
	}
xx189:
#line 215 "./mql.re"
	{ MQL_TOKEN_RETURN("multiple", T_KEY_MULTIPLE); }
#line 1353 "./mql_lexer.cpp"
xx190:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx191;
	if (yych != 'a') goto xx104;
xx191:
	yych = *++YYCURSOR;
	if (yych == 'D') goto xx192;
	if (yych != 'd') goto xx104;
xx192:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '@') {
			if (yych <= '/') goto xx193;
			if (yych <= '9') goto xx103;
		} else {
			if (yych == 'S') goto xx194;
			goto xx103;
		}
	} else {
		if (yych <= '`') {
			if (yych == '_') goto xx103;
		} else {
			if (yych == 's') goto xx194;
			if (yych <= 'z') goto xx103;
		}
	}
xx193:
#line 227 "./mql.re"
	{ MQL_TOKEN_RETURN("monad", T_KEY_MONAD);  }
#line 1383 "./mql_lexer.cpp"
xx194:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx195;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx195;
			if (yych <= 'z') goto xx103;
		}
	}
xx195:
#line 226 "./mql.re"
	{ MQL_TOKEN_RETURN("monads", T_KEY_MONADS);  }
#line 1401 "./mql_lexer.cpp"
xx196:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx197;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx198;
		} else {
			if (yych <= '`') goto xx197;
			if (yych <= 'z') goto xx103;
		}
	}
xx197:
#line 255 "./mql.re"
	{ MQL_TOKEN_RETURN("min", T_KEY_MIN); }
#line 1419 "./mql_lexer.cpp"
xx198:
	yych = *++YYCURSOR;
	if (yych == 'M') goto xx199;
	if (yych != 'm') goto xx104;
xx199:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx200;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx200;
			if (yych <= 'z') goto xx103;
		}
	}
xx200:
#line 253 "./mql.re"
	{ MQL_TOKEN_RETURN("min_m", T_KEY_MIN_M); }
#line 1441 "./mql_lexer.cpp"
xx201:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx202;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx203;
		} else {
			if (yych <= '`') goto xx202;
			if (yych <= 'z') goto xx103;
		}
	}
xx202:
#line 256 "./mql.re"
	{ MQL_TOKEN_RETURN("max", T_KEY_MAX); }
#line 1459 "./mql_lexer.cpp"
xx203:
	yych = *++YYCURSOR;
	if (yych == 'M') goto xx204;
	if (yych != 'm') goto xx104;
xx204:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx205;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx205;
			if (yych <= 'z') goto xx103;
		}
	}
xx205:
#line 254 "./mql.re"
	{ MQL_TOKEN_RETURN("max_m", T_KEY_MAX_M); }
#line 1481 "./mql_lexer.cpp"
xx206:
	yych = *++YYCURSOR;
	if (yych <= 'U') {
		if (yych == 'C') goto xx214;
		if (yych <= 'T') goto xx104;
		goto xx213;
	} else {
		if (yych <= 'c') {
			if (yych <= 'b') goto xx104;
			goto xx214;
		} else {
			if (yych == 'u') goto xx213;
			goto xx104;
		}
	}
xx207:
	yych = *++YYCURSOR;
	if (yych == 'I') goto xx208;
	if (yych != 'i') goto xx104;
xx208:
	yych = *++YYCURSOR;
	if (yych == 'S') goto xx209;
	if (yych != 's') goto xx104;
xx209:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx210;
	if (yych != 't') goto xx104;
xx210:
	yych = *++YYCURSOR;
	if (yych == 'S') goto xx211;
	if (yych != 's') goto xx104;
xx211:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx212;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx212;
			if (yych <= 'z') goto xx103;
		}
	}
xx212:
#line 240 "./mql.re"
	{ MQL_TOKEN_RETURN("exists", T_KEY_EXISTS);  }
#line 1530 "./mql_lexer.cpp"
xx213:
	yych = *++YYCURSOR;
	if (yych == 'M') goto xx221;
	if (yych == 'm') goto xx221;
	goto xx104;
xx214:
	yych = *++YYCURSOR;
	if (yych == 'O') goto xx215;
	if (yych != 'o') goto xx104;
xx215:
	yych = *++YYCURSOR;
	if (yych == 'D') goto xx216;
	if (yych != 'd') goto xx104;
xx216:
	yych = *++YYCURSOR;
	if (yych == 'I') goto xx217;
	if (yych != 'i') goto xx104;
xx217:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx218;
	if (yych != 'n') goto xx104;
xx218:
	yych = *++YYCURSOR;
	if (yych == 'G') goto xx219;
	if (yych != 'g') goto xx104;
xx219:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx220;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx220;
			if (yych <= 'z') goto xx103;
		}
	}
xx220:
#line 274 "./mql.re"
	{ MQL_TOKEN_RETURN("encoding", T_KEY_ENCODING); }
#line 1573 "./mql_lexer.cpp"
xx221:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '@') {
			if (yych <= '/') goto xx222;
			if (yych <= '9') goto xx103;
		} else {
			if (yych == 'E') goto xx223;
			goto xx103;
		}
	} else {
		if (yych <= '`') {
			if (yych == '_') goto xx103;
		} else {
			if (yych == 'e') goto xx223;
			if (yych <= 'z') goto xx103;
		}
	}
xx222:
#line 208 "./mql.re"
	{ MQL_TOKEN_RETURN("enum", T_KEY_ENUM);  }
#line 1595 "./mql_lexer.cpp"
xx223:
	yych = *++YYCURSOR;
	if (yych == 'R') goto xx224;
	if (yych != 'r') goto xx104;
xx224:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx225;
	if (yych != 'a') goto xx104;
xx225:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx226;
	if (yych != 't') goto xx104;
xx226:
	yych = *++YYCURSOR;
	if (yych == 'I') goto xx227;
	if (yych != 'i') goto xx104;
xx227:
	yych = *++YYCURSOR;
	if (yych == 'O') goto xx228;
	if (yych != 'o') goto xx104;
xx228:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx229;
	if (yych != 'n') goto xx104;
xx229:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '@') {
			if (yych <= '/') goto xx230;
			if (yych <= '9') goto xx103;
		} else {
			if (yych == 'S') goto xx231;
			goto xx103;
		}
	} else {
		if (yych <= '`') {
			if (yych == '_') goto xx103;
		} else {
			if (yych == 's') goto xx231;
			if (yych <= 'z') goto xx103;
		}
	}
xx230:
#line 209 "./mql.re"
	{ MQL_TOKEN_RETURN("enumeration", T_KEY_ENUMERATION);  }
#line 1641 "./mql_lexer.cpp"
xx231:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx232;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx232;
			if (yych <= 'z') goto xx103;
		}
	}
xx232:
#line 210 "./mql.re"
	{ MQL_TOKEN_RETURN("enumerations", T_KEY_ENUMERATIONS);  }
#line 1659 "./mql_lexer.cpp"
xx233:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx256;
	if (yych == 'a') goto xx256;
	goto xx104;
xx234:
	yych = *++YYCURSOR;
	if (yych == 'R') goto xx252;
	if (yych == 'r') goto xx252;
	goto xx104;
xx235:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx249;
	if (yych == 'a') goto xx249;
	goto xx104;
xx236:
	yych = *++YYCURSOR;
	if (yych == 'C') goto xx245;
	if (yych == 'c') goto xx245;
	goto xx104;
xx237:
	yych = *++YYCURSOR;
	if (yych == 'O') goto xx242;
	if (yych == 'o') goto xx242;
	goto xx104;
xx238:
	yych = *++YYCURSOR;
	if (yych == 'L') goto xx239;
	if (yych != 'l') goto xx104;
xx239:
	yych = *++YYCURSOR;
	if (yych == 'L') goto xx240;
	if (yych != 'l') goto xx104;
xx240:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx241;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx241;
			if (yych <= 'z') goto xx103;
		}
	}
xx241:
#line 260 "./mql.re"
	{ MQL_TOKEN_RETURN("full", T_KEY_FULL); }
#line 1710 "./mql_lexer.cpp"
xx242:
	yych = *++YYCURSOR;
	if (yych == 'M') goto xx243;
	if (yych != 'm') goto xx104;
xx243:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx244;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx244;
			if (yych <= 'z') goto xx103;
		}
	}
xx244:
#line 206 "./mql.re"
	{ MQL_TOKEN_RETURN("from", T_KEY_FROM);  }
#line 1732 "./mql_lexer.cpp"
xx245:
	yych = *++YYCURSOR;
	if (yych == 'U') goto xx246;
	if (yych != 'u') goto xx104;
xx246:
	yych = *++YYCURSOR;
	if (yych == 'S') goto xx247;
	if (yych != 's') goto xx104;
xx247:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx248;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx248;
			if (yych <= 'z') goto xx103;
		}
	}
xx248:
#line 216 "./mql.re"
	{ MQL_TOKEN_RETURN("focus", T_KEY_FOCUS);  }
#line 1758 "./mql_lexer.cpp"
xx249:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx250;
	if (yych != 't') goto xx104;
xx250:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx251;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx251;
			if (yych <= 'z') goto xx103;
		}
	}
xx251:
#line 259 "./mql.re"
	{ MQL_TOKEN_RETURN("flat", T_KEY_FLAT); }
#line 1780 "./mql_lexer.cpp"
xx252:
	yych = *++YYCURSOR;
	if (yych == 'S') goto xx253;
	if (yych != 's') goto xx104;
xx253:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx254;
	if (yych != 't') goto xx104;
xx254:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx255;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx255;
			if (yych <= 'z') goto xx103;
		}
	}
xx255:
#line 235 "./mql.re"
	{ MQL_TOKEN_RETURN("first", T_KEY_FIRST);  }
#line 1806 "./mql_lexer.cpp"
xx256:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx257;
	if (yych != 't') goto xx104;
xx257:
	yych = *++YYCURSOR;
	if (yych == 'U') goto xx258;
	if (yych != 'u') goto xx104;
xx258:
	yych = *++YYCURSOR;
	if (yych == 'R') goto xx259;
	if (yych != 'r') goto xx104;
xx259:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx260;
	if (yych != 'e') goto xx104;
xx260:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '@') {
			if (yych <= '/') goto xx261;
			if (yych <= '9') goto xx103;
		} else {
			if (yych == 'S') goto xx262;
			goto xx103;
		}
	} else {
		if (yych <= '`') {
			if (yych == '_') goto xx103;
		} else {
			if (yych == 's') goto xx262;
			if (yych <= 'z') goto xx103;
		}
	}
xx261:
#line 221 "./mql.re"
	{ MQL_TOKEN_RETURN("feature", T_KEY_FEATURE);  }
#line 1844 "./mql_lexer.cpp"
xx262:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx263;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx263;
			if (yych <= 'z') goto xx103;
		}
	}
xx263:
#line 222 "./mql.re"
	{ MQL_TOKEN_RETURN("features", T_KEY_FEATURES);  }
#line 1862 "./mql_lexer.cpp"
xx264:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx291;
	if (yych == 'n') goto xx291;
	goto xx104;
xx265:
	yych = *++YYCURSOR;
	if (yych <= 'T') {
		if (yych <= 'O') {
			if (yych != 'M') goto xx104;
		} else {
			if (yych <= 'P') goto xx268;
			if (yych <= 'S') goto xx104;
			goto xx267;
		}
	} else {
		if (yych <= 'o') {
			if (yych != 'm') goto xx104;
		} else {
			if (yych <= 'p') goto xx268;
			if (yych == 't') goto xx267;
			goto xx104;
		}
	}
	yych = *++YYCURSOR;
	if (yych == 'O') goto xx287;
	if (yych == 'o') goto xx287;
	goto xx104;
xx267:
	yych = *++YYCURSOR;
	if (yych <= 'U') {
		if (yych == 'R') goto xx274;
		if (yych <= 'T') goto xx104;
		goto xx275;
	} else {
		if (yych <= 'r') {
			if (yych <= 'q') goto xx104;
			goto xx274;
		} else {
			if (yych == 'u') goto xx275;
			goto xx104;
		}
	}
xx268:
	yych = *++YYCURSOR;
	if (yych == 'L') goto xx269;
	if (yych != 'l') goto xx104;
xx269:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx270;
	if (yych != 'a') goto xx104;
xx270:
	yych = *++YYCURSOR;
	if (yych == 'C') goto xx271;
	if (yych != 'c') goto xx104;
xx271:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx272;
	if (yych != 'e') goto xx104;
xx272:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx273;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx273;
			if (yych <= 'z') goto xx103;
		}
	}
xx273:
#line 273 "./mql.re"
	{ MQL_TOKEN_RETURN("replace", T_KEY_REPLACE); }
#line 1939 "./mql_lexer.cpp"
xx274:
	yych = *++YYCURSOR;
	if (yych == 'I') goto xx282;
	if (yych == 'i') goto xx282;
	goto xx104;
xx275:
	yych = *++YYCURSOR;
	if (yych == 'R') goto xx276;
	if (yych != 'r') goto xx104;
xx276:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx277;
	if (yych != 'n') goto xx104;
xx277:
	yych = *++YYCURSOR;
	if (yych == 'I') goto xx278;
	if (yych != 'i') goto xx104;
xx278:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx279;
	if (yych != 'n') goto xx104;
xx279:
	yych = *++YYCURSOR;
	if (yych == 'G') goto xx280;
	if (yych != 'g') goto xx104;
xx280:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx281;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx281;
			if (yych <= 'z') goto xx103;
		}
	}
xx281:
#line 251 "./mql.re"
	{ MQL_TOKEN_RETURN("returning", T_KEY_RETURNING); }
#line 1982 "./mql_lexer.cpp"
xx282:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx283;
	if (yych != 'e') goto xx104;
xx283:
	yych = *++YYCURSOR;
	if (yych == 'V') goto xx284;
	if (yych != 'v') goto xx104;
xx284:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx285;
	if (yych != 'e') goto xx104;
xx285:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx286;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx286;
			if (yych <= 'z') goto xx103;
		}
	}
xx286:
#line 234 "./mql.re"
	{ MQL_TOKEN_RETURN("retrieve", T_KEY_RETRIEVE);  }
#line 2012 "./mql_lexer.cpp"
xx287:
	yych = *++YYCURSOR;
	if (yych == 'V') goto xx288;
	if (yych != 'v') goto xx104;
xx288:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx289;
	if (yych != 'e') goto xx104;
xx289:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx290;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx290;
			if (yych <= 'z') goto xx103;
		}
	}
xx290:
#line 205 "./mql.re"
	{ MQL_TOKEN_RETURN("remove", T_KEY_REMOVE);  }
#line 2038 "./mql_lexer.cpp"
xx291:
	yych = *++YYCURSOR;
	if (yych == 'G') goto xx292;
	if (yych != 'g') goto xx104;
xx292:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx293;
	if (yych != 'e') goto xx104;
xx293:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx294;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx294;
			if (yych <= 'z') goto xx103;
		}
	}
xx294:
#line 213 "./mql.re"
	{ MQL_TOKEN_RETURN("range", T_KEY_RANGE);  }
#line 2064 "./mql_lexer.cpp"
xx295:
	yych = *++YYCURSOR;
	if (yych == 'S') goto xx300;
	if (yych == 's') goto xx300;
	goto xx104;
xx296:
	yych = *++YYCURSOR;
	if (yych == 'S') goto xx297;
	if (yych != 's') goto xx104;
xx297:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx298;
	if (yych != 't') goto xx104;
xx298:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx299;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx299;
			if (yych <= 'z') goto xx103;
		}
	}
xx299:
#line 192 "./mql.re"
	{ MQL_TOKEN_RETURN("list", T_KEY_LIST); }
#line 2095 "./mql_lexer.cpp"
xx300:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx301;
	if (yych != 't') goto xx104;
xx301:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx302;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx302;
			if (yych <= 'z') goto xx103;
		}
	}
xx302:
#line 236 "./mql.re"
	{ MQL_TOKEN_RETURN("last", T_KEY_LAST);  }
#line 2117 "./mql_lexer.cpp"
xx303:
	yych = *++YYCURSOR;
	if (yych == 'J') goto xx317;
	if (yych == 'j') goto xx317;
	goto xx104;
xx304:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx305;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx305;
			if (yych <= 'z') goto xx103;
		}
	}
xx305:
#line 193 "./mql.re"
	{ MQL_TOKEN_RETURN("of", T_KEY_OF); }
#line 2140 "./mql_lexer.cpp"
xx306:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx307;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx307;
			if (yych <= 'z') goto xx103;
		}
	}
xx307:
#line 261 "./mql.re"
	{ MQL_TOKEN_RETURN("on", T_KEY_ON); }
#line 2158 "./mql_lexer.cpp"
xx308:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx309;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx309;
			if (yych <= 'z') goto xx103;
		}
	}
xx309:
#line 237 "./mql.re"
	{ MQL_TOKEN_RETURN("or", T_KEY_OR);  }
#line 2176 "./mql_lexer.cpp"
xx310:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx311;
	if (yych != 'e') goto xx104;
xx311:
	yych = *++YYCURSOR;
	if (yych == 'R') goto xx312;
	if (yych != 'r') goto xx104;
xx312:
	yych = *++YYCURSOR;
	if (yych == 'L') goto xx313;
	if (yych != 'l') goto xx104;
xx313:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx314;
	if (yych != 'a') goto xx104;
xx314:
	yych = *++YYCURSOR;
	if (yych == 'P') goto xx315;
	if (yych != 'p') goto xx104;
xx315:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx316;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx316;
			if (yych <= 'z') goto xx103;
		}
	}
xx316:
#line 268 "./mql.re"
	{ MQL_TOKEN_RETURN("overlap", T_KEY_OVERLAP); }
#line 2214 "./mql_lexer.cpp"
xx317:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx318;
	if (yych != 'e') goto xx104;
xx318:
	yych = *++YYCURSOR;
	if (yych == 'C') goto xx319;
	if (yych != 'c') goto xx104;
xx319:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx320;
	if (yych != 't') goto xx104;
xx320:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '@') {
			if (yych <= '/') goto xx321;
			if (yych <= '9') goto xx103;
		} else {
			if (yych == 'S') goto xx322;
			goto xx103;
		}
	} else {
		if (yych <= '`') {
			if (yych == '_') goto xx103;
		} else {
			if (yych == 's') goto xx322;
			if (yych <= 'z') goto xx103;
		}
	}
xx321:
#line 190 "./mql.re"
	{ MQL_TOKEN_RETURN("object", T_KEY_OBJECT);  }
#line 2248 "./mql_lexer.cpp"
xx322:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx323;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx323;
			if (yych <= 'z') goto xx103;
		}
	}
xx323:
#line 191 "./mql.re"
	{ MQL_TOKEN_RETURN("objects", T_KEY_OBJECTS);  }
#line 2266 "./mql_lexer.cpp"
xx324:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx331;
	if (yych == 'a') goto xx331;
	goto xx104;
xx325:
	yych = *++YYCURSOR;
	if (yych == 'P') goto xx326;
	if (yych != 'p') goto xx104;
xx326:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx327;
	if (yych != 'e') goto xx104;
xx327:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '@') {
			if (yych <= '/') goto xx328;
			if (yych <= '9') goto xx103;
		} else {
			if (yych == 'S') goto xx329;
			goto xx103;
		}
	} else {
		if (yych <= '`') {
			if (yych == '_') goto xx103;
		} else {
			if (yych == 's') goto xx329;
			if (yych <= 'z') goto xx103;
		}
	}
xx328:
#line 188 "./mql.re"
	{ MQL_TOKEN_RETURN("type", T_KEY_TYPE);  }
#line 2301 "./mql_lexer.cpp"
xx329:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx330;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx330;
			if (yych <= 'z') goto xx103;
		}
	}
xx330:
#line 189 "./mql.re"
	{ MQL_TOKEN_RETURN("types", T_KEY_TYPES);  }
#line 2319 "./mql_lexer.cpp"
xx331:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx332;
	if (yych != 'n') goto xx104;
xx332:
	yych = *++YYCURSOR;
	if (yych == 'S') goto xx333;
	if (yych != 's') goto xx104;
xx333:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx334;
	if (yych != 'a') goto xx104;
xx334:
	yych = *++YYCURSOR;
	if (yych == 'C') goto xx335;
	if (yych != 'c') goto xx104;
xx335:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx336;
	if (yych != 't') goto xx104;
xx336:
	yych = *++YYCURSOR;
	if (yych == 'I') goto xx337;
	if (yych != 'i') goto xx104;
xx337:
	yych = *++YYCURSOR;
	if (yych == 'O') goto xx338;
	if (yych != 'o') goto xx104;
xx338:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx339;
	if (yych != 'n') goto xx104;
xx339:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx340;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx340;
			if (yych <= 'z') goto xx103;
		}
	}
xx340:
#line 187 "./mql.re"
	{ MQL_TOKEN_RETURN("transaction", T_KEY_TRANSACTION); }
#line 2369 "./mql_lexer.cpp"
xx341:
	yych = *++YYCURSOR;
	if (yych <= 'T') {
		if (yych == 'G') goto xx344;
		if (yych <= 'S') goto xx104;
		goto xx345;
	} else {
		if (yych <= 'g') {
			if (yych <= 'f') goto xx104;
			goto xx344;
		} else {
			if (yych == 't') goto xx345;
			goto xx104;
		}
	}
xx342:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx343;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx343;
			if (yych <= 'z') goto xx103;
		}
	}
xx343:
#line 207 "./mql.re"
	{ MQL_TOKEN_RETURN("by", T_KEY_BY);  }
#line 2402 "./mql_lexer.cpp"
xx344:
	yych = *++YYCURSOR;
	if (yych == 'I') goto xx351;
	if (yych == 'i') goto xx351;
	goto xx104;
xx345:
	yych = *++YYCURSOR;
	if (yych == 'W') goto xx346;
	if (yych != 'w') goto xx104;
xx346:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx347;
	if (yych != 'e') goto xx104;
xx347:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx348;
	if (yych != 'e') goto xx104;
xx348:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx349;
	if (yych != 'n') goto xx104;
xx349:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx350;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx350;
			if (yych <= 'z') goto xx103;
		}
	}
xx350:
#line 247 "./mql.re"
	{ MQL_TOKEN_RETURN("between", T_KEY_BETWEEN); }
#line 2441 "./mql_lexer.cpp"
xx351:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx352;
	if (yych != 'n') goto xx104;
xx352:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx353;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx353;
			if (yych <= 'z') goto xx103;
		}
	}
xx353:
#line 184 "./mql.re"
	{ MQL_TOKEN_RETURN("begin", T_KEY_BEGIN); }
#line 2463 "./mql_lexer.cpp"
xx354:
	yych = *++YYCURSOR;
	if (yych == 'O') goto xx387;
	if (yych == 'o') goto xx387;
	goto xx104;
xx355:
	yych = *++YYCURSOR;
	if (yych == 'D') goto xx385;
	if (yych == 'd') goto xx385;
	goto xx104;
xx356:
	yych = *++YYCURSOR;
	if (yych == 'G') goto xx377;
	if (yych == 'g') goto xx377;
	goto xx104;
xx357:
	yych = *++YYCURSOR;
	if (yych == 'L') goto xx375;
	if (yych == 'l') goto xx375;
	goto xx104;
xx358:
	yych = *++YYCURSOR;
	if (yych <= 'D') {
		if (yych == 'A') goto xx367;
		if (yych <= 'C') goto xx104;
		goto xx368;
	} else {
		if (yych <= 'a') {
			if (yych <= '`') goto xx104;
			goto xx367;
		} else {
			if (yych == 'd') goto xx368;
			goto xx104;
		}
	}
xx359:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '@') {
			if (yych <= '/') goto xx360;
			if (yych <= '9') goto xx103;
		} else {
			if (yych == 'C') goto xx363;
			goto xx103;
		}
	} else {
		if (yych <= '`') {
			if (yych == '_') goto xx103;
		} else {
			if (yych == 'c') goto xx363;
			if (yych <= 'z') goto xx103;
		}
	}
xx360:
#line 248 "./mql.re"
	{ MQL_TOKEN_RETURN("as", T_KEY_AS);  }
#line 2520 "./mql_lexer.cpp"
xx361:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx362;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx362;
			if (yych <= 'z') goto xx103;
		}
	}
xx362:
#line 263 "./mql.re"
	{ MQL_TOKEN_RETURN("at", T_KEY_AT); }
#line 2538 "./mql_lexer.cpp"
xx363:
	yych = *++YYCURSOR;
	if (yych == 'I') goto xx364;
	if (yych != 'i') goto xx104;
xx364:
	yych = *++YYCURSOR;
	if (yych == 'I') goto xx365;
	if (yych != 'i') goto xx104;
xx365:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx366;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx366;
			if (yych <= 'z') goto xx103;
		}
	}
xx366:
#line 199 "./mql.re"
	{ MQL_TOKEN_RETURN("ascii", T_KEY_ASCII); }
#line 2564 "./mql_lexer.cpp"
xx367:
	yych = *++YYCURSOR;
	if (yych == 'L') goto xx370;
	if (yych == 'l') goto xx370;
	goto xx104;
xx368:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx369;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx369;
			if (yych <= 'z') goto xx103;
		}
	}
xx369:
#line 238 "./mql.re"
	{ MQL_TOKEN_RETURN("and", T_KEY_AND);  }
#line 2587 "./mql_lexer.cpp"
xx370:
	yych = *++YYCURSOR;
	if (yych == 'Y') goto xx371;
	if (yych != 'y') goto xx104;
xx371:
	yych = *++YYCURSOR;
	if (yych == 'Z') goto xx372;
	if (yych != 'z') goto xx104;
xx372:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx373;
	if (yych != 'e') goto xx104;
xx373:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx374;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx374;
			if (yych <= 'z') goto xx103;
		}
	}
xx374:
#line 183 "./mql.re"
	{ MQL_TOKEN_RETURN("analyze", T_KEY_ANALYZE); }
#line 2617 "./mql_lexer.cpp"
xx375:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx376;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx376;
			if (yych <= 'z') goto xx103;
		}
	}
xx376:
#line 217 "./mql.re"
	{ MQL_TOKEN_RETURN("all", T_KEY_ALL);  }
#line 2635 "./mql_lexer.cpp"
xx377:
	yych = *++YYCURSOR;
	if (yych == 'R') goto xx378;
	if (yych != 'r') goto xx104;
xx378:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx379;
	if (yych != 'e') goto xx104;
xx379:
	yych = *++YYCURSOR;
	if (yych == 'G') goto xx380;
	if (yych != 'g') goto xx104;
xx380:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx381;
	if (yych != 'a') goto xx104;
xx381:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx382;
	if (yych != 't') goto xx104;
xx382:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx383;
	if (yych != 'e') goto xx104;
xx383:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx384;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx384;
			if (yych <= 'z') goto xx103;
		}
	}
xx384:
#line 223 "./mql.re"
	{ MQL_TOKEN_RETURN("aggregate", T_KEY_AGGREGATE);  }
#line 2677 "./mql_lexer.cpp"
xx385:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx386;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx386;
			if (yych <= 'z') goto xx103;
		}
	}
xx386:
#line 204 "./mql.re"
	{ MQL_TOKEN_RETURN("add", T_KEY_ADD);  }
#line 2695 "./mql_lexer.cpp"
xx387:
	yych = *++YYCURSOR;
	if (yych == 'R') goto xx388;
	if (yych != 'r') goto xx104;
xx388:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx389;
	if (yych != 't') goto xx104;
xx389:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx390;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx390;
			if (yych <= 'z') goto xx103;
		}
	}
xx390:
#line 186 "./mql.re"
	{ MQL_TOKEN_RETURN("abort", T_KEY_ABORT); }
#line 2721 "./mql_lexer.cpp"
xx391:
	yych = *++YYCURSOR;
	if (yych == 'C') goto xx392;
	if (yych != 'c') goto xx104;
xx392:
	yych = *++YYCURSOR;
	if (yych == 'U') goto xx393;
	if (yych != 'u') goto xx104;
xx393:
	yych = *++YYCURSOR;
	if (yych == 'U') goto xx394;
	if (yych != 'u') goto xx104;
xx394:
	yych = *++YYCURSOR;
	if (yych == 'M') goto xx395;
	if (yych != 'm') goto xx104;
xx395:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx396;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx396;
			if (yych <= 'z') goto xx103;
		}
	}
xx396:
#line 182 "./mql.re"
	{ MQL_TOKEN_RETURN("vacuum", T_KEY_VACUUM); }
#line 2755 "./mql_lexer.cpp"
xx397:
	yych = *++YYCURSOR;
	if (yych == '_') goto xx435;
	goto xx104;
xx398:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx399;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx399;
			if (yych <= 'z') goto xx103;
		}
	}
xx399:
#line 241 "./mql.re"
	{ MQL_TOKEN_RETURN("if", T_KEY_IF);  }
#line 2777 "./mql_lexer.cpp"
xx400:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= 'D') {
			if (yych <= '9') {
				if (yych >= '0') goto xx103;
			} else {
				if (yych <= '@') goto xx401;
				if (yych <= 'C') goto xx103;
				goto xx404;
			}
		} else {
			if (yych <= 'R') {
				if (yych == 'I') goto xx403;
				goto xx103;
			} else {
				if (yych <= 'S') goto xx402;
				if (yych <= 'T') goto xx405;
				goto xx103;
			}
		}
	} else {
		if (yych <= 'h') {
			if (yych <= '`') {
				if (yych == '_') goto xx103;
			} else {
				if (yych == 'd') goto xx404;
				goto xx103;
			}
		} else {
			if (yych <= 's') {
				if (yych <= 'i') goto xx403;
				if (yych <= 'r') goto xx103;
				goto xx402;
			} else {
				if (yych <= 't') goto xx405;
				if (yych <= 'z') goto xx103;
			}
		}
	}
xx401:
#line 194 "./mql.re"
	{ MQL_TOKEN_RETURN("in", T_KEY_IN);  }
#line 2821 "./mql_lexer.cpp"
xx402:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx431;
	if (yych == 'e') goto xx431;
	goto xx104;
xx403:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx423;
	if (yych == 't') goto xx423;
	goto xx104;
xx404:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx417;
	if (yych == 'e') goto xx417;
	goto xx104;
xx405:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx406;
	if (yych != 'e') goto xx104;
xx406:
	yych = *++YYCURSOR;
	if (yych <= 'R') {
		if (yych == 'G') goto xx407;
		if (yych <= 'Q') goto xx104;
		goto xx408;
	} else {
		if (yych <= 'g') {
			if (yych <= 'f') goto xx104;
		} else {
			if (yych == 'r') goto xx408;
			goto xx104;
		}
	}
xx407:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx414;
	if (yych == 'e') goto xx414;
	goto xx104;
xx408:
	yych = *++YYCURSOR;
	if (yych == 'S') goto xx409;
	if (yych != 's') goto xx104;
xx409:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx410;
	if (yych != 'e') goto xx104;
xx410:
	yych = *++YYCURSOR;
	if (yych == 'C') goto xx411;
	if (yych != 'c') goto xx104;
xx411:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx412;
	if (yych != 't') goto xx104;
xx412:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx413;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx413;
			if (yych <= 'z') goto xx103;
		}
	}
xx413:
#line 271 "./mql.re"
	{ MQL_TOKEN_RETURN("intersect", T_KEY_INTERSECT); }
#line 2893 "./mql_lexer.cpp"
xx414:
	yych = *++YYCURSOR;
	if (yych == 'R') goto xx415;
	if (yych != 'r') goto xx104;
xx415:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx416;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx416;
			if (yych <= 'z') goto xx103;
		}
	}
xx416:
#line 197 "./mql.re"
	{ MQL_TOKEN_RETURN("integer", T_KEY_INTEGER);  }
#line 2915 "./mql_lexer.cpp"
xx417:
	yych = *++YYCURSOR;
	if (yych == 'X') goto xx418;
	if (yych != 'x') goto xx104;
xx418:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '@') {
			if (yych <= '/') goto xx419;
			if (yych <= '9') goto xx103;
		} else {
			if (yych == 'E') goto xx420;
			goto xx103;
		}
	} else {
		if (yych <= '`') {
			if (yych == '_') goto xx103;
		} else {
			if (yych == 'e') goto xx420;
			if (yych <= 'z') goto xx103;
		}
	}
xx419:
#line 196 "./mql.re"
	{ MQL_TOKEN_RETURN("index", T_KEY_INDEX); }
#line 2941 "./mql_lexer.cpp"
xx420:
	yych = *++YYCURSOR;
	if (yych == 'S') goto xx421;
	if (yych != 's') goto xx104;
xx421:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx422;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx422;
			if (yych <= 'z') goto xx103;
		}
	}
xx422:
#line 195 "./mql.re"
	{ MQL_TOKEN_RETURN("indexes", T_KEY_INDEXES); }
#line 2963 "./mql_lexer.cpp"
xx423:
	yych = *++YYCURSOR;
	if (yych == 'I') goto xx424;
	if (yych != 'i') goto xx104;
xx424:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx425;
	if (yych != 'a') goto xx104;
xx425:
	yych = *++YYCURSOR;
	if (yych == 'L') goto xx426;
	if (yych != 'l') goto xx104;
xx426:
	yych = *++YYCURSOR;
	if (yych == 'I') goto xx427;
	if (yych != 'i') goto xx104;
xx427:
	yych = *++YYCURSOR;
	if (yych == 'Z') goto xx428;
	if (yych != 'z') goto xx104;
xx428:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx429;
	if (yych != 'e') goto xx104;
xx429:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx430;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx430;
			if (yych <= 'z') goto xx103;
		}
	}
xx430:
#line 181 "./mql.re"
	{ MQL_TOKEN_RETURN("initialize", T_KEY_INITIALIZE);  }
#line 3005 "./mql_lexer.cpp"
xx431:
	yych = *++YYCURSOR;
	if (yych == 'R') goto xx432;
	if (yych != 'r') goto xx104;
xx432:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx433;
	if (yych != 't') goto xx104;
xx433:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx434;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx434;
			if (yych <= 'z') goto xx103;
		}
	}
xx434:
#line 177 "./mql.re"
	{ MQL_TOKEN_RETURN("insert", T_KEY_INSERT);  }
#line 3031 "./mql_lexer.cpp"
xx435:
	yych = *++YYCURSOR;
	if (yych == 'D') goto xx436;
	if (yych != 'd') goto xx104;
xx436:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '@') {
			if (yych <= '/') goto xx437;
			if (yych <= '9') goto xx103;
		} else {
			if (yych == 'S') goto xx438;
			goto xx103;
		}
	} else {
		if (yych <= '`') {
			if (yych == '_') goto xx103;
		} else {
			if (yych == 's') goto xx438;
			if (yych <= 'z') goto xx103;
		}
	}
xx437:
#line 200 "./mql.re"
	{ MQL_TOKEN_RETURN("id_d", T_KEY_ID_D);  }
#line 3057 "./mql_lexer.cpp"
xx438:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx439;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx439;
			if (yych <= 'z') goto xx103;
		}
	}
xx439:
#line 201 "./mql.re"
	{ MQL_TOKEN_RETURN("id_ds", T_KEY_ID_DS);  }
#line 3075 "./mql_lexer.cpp"
xx440:
	yych = *++YYCURSOR;
	if (yych == 'P') goto xx446;
	if (yych == 'p') goto xx446;
	goto xx104;
xx441:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx444;
	if (yych == 't') goto xx444;
	goto xx104;
xx442:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx443;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx443;
			if (yych <= 'z') goto xx103;
		}
	}
xx443:
#line 250 "./mql.re"
	{ MQL_TOKEN_RETURN("go", T_KEY_GO); }
#line 3103 "./mql_lexer.cpp"
xx444:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx445;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx445;
			if (yych <= 'z') goto xx103;
		}
	}
xx445:
#line 176 "./mql.re"
	{ MQL_TOKEN_RETURN("get", T_KEY_GET);  }
#line 3121 "./mql_lexer.cpp"
xx446:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= '@') {
		if (yych <= '9') {
			if (yych >= '0') goto xx103;
		} else {
			if (yych == '?') goto xx448;
		}
	} else {
		if (yych <= '_') {
			if (yych <= 'Z') goto xx103;
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx447;
			if (yych <= 'z') goto xx103;
		}
	}
xx447:
#line 244 "./mql.re"
	{ MQL_TOKEN_RETURN("gap", T_KEY_GAP);  }
#line 3142 "./mql_lexer.cpp"
xx448:
	++YYCURSOR;
#line 245 "./mql.re"
	{ MQL_TOKEN_RETURN("gap?", T_KEY_OPT_GAP);  }
#line 3147 "./mql_lexer.cpp"
xx450:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx477;
	if (yych == 't') goto xx477;
	goto xx104;
xx451:
	yych = *++YYCURSOR;
	if (yych <= 'L') {
		if (yych == 'F') goto xx467;
		if (yych <= 'K') goto xx104;
		goto xx466;
	} else {
		if (yych <= 'f') {
			if (yych <= 'e') goto xx104;
			goto xx467;
		} else {
			if (yych == 'l') goto xx466;
			goto xx104;
		}
	}
xx452:
	yych = *++YYCURSOR;
	if (yych == 'F') goto xx457;
	if (yych == 'f') goto xx457;
	goto xx104;
xx453:
	yych = *++YYCURSOR;
	if (yych == 'O') goto xx454;
	if (yych != 'o') goto xx104;
xx454:
	yych = *++YYCURSOR;
	if (yych == 'P') goto xx455;
	if (yych != 'p') goto xx104;
xx455:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx456;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx456;
			if (yych <= 'z') goto xx103;
		}
	}
xx456:
#line 175 "./mql.re"
	{ MQL_TOKEN_RETURN("drop", T_KEY_DROP);  }
#line 3198 "./mql_lexer.cpp"
xx457:
	yych = *++YYCURSOR;
	if (yych == 'F') goto xx458;
	if (yych != 'f') goto xx104;
xx458:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx459;
	if (yych != 'e') goto xx104;
xx459:
	yych = *++YYCURSOR;
	if (yych == 'R') goto xx460;
	if (yych != 'r') goto xx104;
xx460:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx461;
	if (yych != 'e') goto xx104;
xx461:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx462;
	if (yych != 'n') goto xx104;
xx462:
	yych = *++YYCURSOR;
	if (yych == 'C') goto xx463;
	if (yych != 'c') goto xx104;
xx463:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx464;
	if (yych != 'e') goto xx104;
xx464:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx465;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx465;
			if (yych <= 'z') goto xx103;
		}
	}
xx465:
#line 272 "./mql.re"
	{ MQL_TOKEN_RETURN("difference", T_KEY_DIFFERENCE); }
#line 3244 "./mql_lexer.cpp"
xx466:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx473;
	if (yych == 'e') goto xx473;
	goto xx104;
xx467:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx468;
	if (yych != 'a') goto xx104;
xx468:
	yych = *++YYCURSOR;
	if (yych == 'U') goto xx469;
	if (yych != 'u') goto xx104;
xx469:
	yych = *++YYCURSOR;
	if (yych == 'L') goto xx470;
	if (yych != 'l') goto xx104;
xx470:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx471;
	if (yych != 't') goto xx104;
xx471:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx472;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx472;
			if (yych <= 'z') goto xx103;
		}
	}
xx472:
#line 202 "./mql.re"
	{ MQL_TOKEN_RETURN("default", T_KEY_DEFAULT);  }
#line 3283 "./mql_lexer.cpp"
xx473:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx474;
	if (yych != 't') goto xx104;
xx474:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx475;
	if (yych != 'e') goto xx104;
xx475:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx476;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx476;
			if (yych <= 'z') goto xx103;
		}
	}
xx476:
#line 178 "./mql.re"
	{ MQL_TOKEN_RETURN("delete", T_KEY_DELETE);  }
#line 3309 "./mql_lexer.cpp"
xx477:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx478;
	if (yych != 'a') goto xx104;
xx478:
	yych = *++YYCURSOR;
	if (yych == 'B') goto xx479;
	if (yych != 'b') goto xx104;
xx479:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx480;
	if (yych != 'a') goto xx104;
xx480:
	yych = *++YYCURSOR;
	if (yych == 'S') goto xx481;
	if (yych != 's') goto xx104;
xx481:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx482;
	if (yych != 'e') goto xx104;
xx482:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx483;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx483;
			if (yych <= 'z') goto xx103;
		}
	}
xx483:
#line 179 "./mql.re"
	{ MQL_TOKEN_RETURN("database", T_KEY_DATABASE);  }
#line 3347 "./mql_lexer.cpp"
xx484:
	yych = *++YYCURSOR;
	if (yych <= 'T') {
		if (yych <= 'K') {
			if (yych == 'G') goto xx522;
			goto xx104;
		} else {
			if (yych <= 'L') goto xx521;
			if (yych <= 'S') goto xx104;
			goto xx523;
		}
	} else {
		if (yych <= 'k') {
			if (yych == 'g') goto xx522;
			goto xx104;
		} else {
			if (yych <= 'l') goto xx521;
			if (yych == 't') goto xx523;
			goto xx104;
		}
	}
xx485:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx517;
	if (yych == 'e') goto xx517;
	goto xx104;
xx486:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx512;
	if (yych == 'n') goto xx512;
	goto xx104;
xx487:
	yych = *++YYCURSOR;
	if (yych <= 'R') {
		if (yych == 'A') goto xx500;
		if (yych <= 'Q') goto xx104;
		goto xx499;
	} else {
		if (yych <= 'a') {
			if (yych <= '`') goto xx104;
			goto xx500;
		} else {
			if (yych == 'r') goto xx499;
			goto xx104;
		}
	}
xx488:
	yych = *++YYCURSOR;
	if (yych <= 'M') {
		if (yych == 'B') goto xx489;
		if (yych <= 'L') goto xx104;
		goto xx490;
	} else {
		if (yych <= 'b') {
			if (yych <= 'a') goto xx104;
		} else {
			if (yych == 'm') goto xx490;
			goto xx104;
		}
	}
xx489:
	yych = *++YYCURSOR;
	if (yych == 'S') goto xx492;
	if (yych == 's') goto xx492;
	goto xx104;
xx490:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx491;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx491;
			if (yych <= 'z') goto xx103;
		}
	}
xx491:
#line 257 "./mql.re"
	{ MQL_TOKEN_RETURN("sum", T_KEY_SUM); }
#line 3430 "./mql_lexer.cpp"
xx492:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx493;
	if (yych != 't') goto xx104;
xx493:
	yych = *++YYCURSOR;
	if (yych == 'R') goto xx494;
	if (yych != 'r') goto xx104;
xx494:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx495;
	if (yych != 'a') goto xx104;
xx495:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx496;
	if (yych != 't') goto xx104;
xx496:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx497;
	if (yych != 'e') goto xx104;
xx497:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx498;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx498;
			if (yych <= 'z') goto xx103;
		}
	}
xx498:
#line 225 "./mql.re"
	{ MQL_TOKEN_RETURN("substrate", T_KEY_SUBSTRATE);  }
#line 3468 "./mql_lexer.cpp"
xx499:
	yych = *++YYCURSOR;
	if (yych == 'I') goto xx508;
	if (yych == 'i') goto xx508;
	goto xx104;
xx500:
	yych = *++YYCURSOR;
	if (yych == 'R') goto xx501;
	if (yych != 'r') goto xx104;
xx501:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx502;
	if (yych != 't') goto xx104;
xx502:
	yych = *++YYCURSOR;
	if (yych == 'S') goto xx503;
	if (yych != 's') goto xx104;
xx503:
	yych = *++YYCURSOR;
	if (yych != '_') goto xx104;
	yych = *++YYCURSOR;
	if (yych == 'I') goto xx505;
	if (yych != 'i') goto xx104;
xx505:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx506;
	if (yych != 'n') goto xx104;
xx506:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx507;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx507;
			if (yych <= 'z') goto xx103;
		}
	}
xx507:
#line 270 "./mql.re"
	{ MQL_TOKEN_RETURN("starts_in", T_KEY_STARTS_IN); }
#line 3513 "./mql_lexer.cpp"
xx508:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx509;
	if (yych != 'n') goto xx104;
xx509:
	yych = *++YYCURSOR;
	if (yych == 'G') goto xx510;
	if (yych != 'g') goto xx104;
xx510:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx511;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx511;
			if (yych <= 'z') goto xx103;
		}
	}
xx511:
#line 198 "./mql.re"
	{ MQL_TOKEN_RETURN("string", T_KEY_STRING);  }
#line 3539 "./mql_lexer.cpp"
xx512:
	yych = *++YYCURSOR;
	if (yych == 'G') goto xx513;
	if (yych != 'g') goto xx104;
xx513:
	yych = *++YYCURSOR;
	if (yych == 'L') goto xx514;
	if (yych != 'l') goto xx104;
xx514:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx515;
	if (yych != 'e') goto xx104;
xx515:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx516;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx516;
			if (yych <= 'z') goto xx103;
		}
	}
xx516:
#line 214 "./mql.re"
	{ MQL_TOKEN_RETURN("single", T_KEY_SINGLE); }
#line 3569 "./mql_lexer.cpp"
xx517:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx518;
	if (yych != 'a') goto xx104;
xx518:
	yych = *++YYCURSOR;
	if (yych == 'F') goto xx519;
	if (yych != 'f') goto xx104;
xx519:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx520;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx520;
			if (yych <= 'z') goto xx103;
		}
	}
xx520:
#line 262 "./mql.re"
	{ MQL_TOKEN_RETURN("sheaf", T_KEY_SHEAF); }
#line 3595 "./mql_lexer.cpp"
xx521:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx532;
	if (yych == 'e') goto xx532;
	goto xx104;
xx522:
	yych = *++YYCURSOR;
	if (yych == 'M') goto xx527;
	if (yych == 'm') goto xx527;
	goto xx104;
xx523:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '@') {
			if (yych <= '/') goto xx524;
			if (yych <= '9') goto xx103;
		} else {
			if (yych == 'S') goto xx525;
			goto xx103;
		}
	} else {
		if (yych <= '`') {
			if (yych == '_') goto xx103;
		} else {
			if (yych == 's') goto xx525;
			if (yych <= 'z') goto xx103;
		}
	}
xx524:
#line 265 "./mql.re"
	{ MQL_TOKEN_RETURN("set", T_KEY_SET); }
#line 3627 "./mql_lexer.cpp"
xx525:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx526;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx526;
			if (yych <= 'z') goto xx103;
		}
	}
xx526:
#line 266 "./mql.re"
	{ MQL_TOKEN_RETURN("sets", T_KEY_SETS); }
#line 3645 "./mql_lexer.cpp"
xx527:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx528;
	if (yych != 'e') goto xx104;
xx528:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx529;
	if (yych != 'n') goto xx104;
xx529:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx530;
	if (yych != 't') goto xx104;
xx530:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx531;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx531;
			if (yych <= 'z') goto xx103;
		}
	}
xx531:
#line 212 "./mql.re"
	{ MQL_TOKEN_RETURN("segment", T_KEY_SEGMENT);  }
#line 3675 "./mql_lexer.cpp"
xx532:
	yych = *++YYCURSOR;
	if (yych == 'C') goto xx533;
	if (yych != 'c') goto xx104;
xx533:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx534;
	if (yych != 't') goto xx104;
xx534:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx535;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx535;
			if (yych <= 'z') goto xx103;
		}
	}
xx535:
#line 174 "./mql.re"
	{ MQL_TOKEN_RETURN("select", T_KEY_SELECT);  }
#line 3701 "./mql_lexer.cpp"
xx536:
	yych = *++YYCURSOR;
	if (yych <= 'O') {
		if (yych == 'I') goto xx551;
		if (yych <= 'N') goto xx104;
		goto xx550;
	} else {
		if (yych <= 'i') {
			if (yych <= 'h') goto xx104;
			goto xx551;
		} else {
			if (yych == 'o') goto xx550;
			goto xx104;
		}
	}
xx537:
	yych = *++YYCURSOR;
	if (yych == 'D') goto xx545;
	if (yych == 'd') goto xx545;
	goto xx104;
xx538:
	yych = *++YYCURSOR;
	if (yych <= 'I') {
		if (yych == 'E') goto xx539;
		if (yych <= 'H') goto xx104;
		goto xx541;
	} else {
		if (yych <= 'e') {
			if (yych <= 'd') goto xx104;
		} else {
			if (yych == 'i') goto xx541;
			goto xx104;
		}
	}
xx539:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx540;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx540;
			if (yych <= 'z') goto xx103;
		}
	}
xx540:
#line 180 "./mql.re"
	{ MQL_TOKEN_RETURN("use", T_KEY_USE);  }
#line 3753 "./mql_lexer.cpp"
xx541:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx542;
	if (yych != 'n') goto xx104;
xx542:
	yych = *++YYCURSOR;
	if (yych == 'G') goto xx543;
	if (yych != 'g') goto xx104;
xx543:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx544;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx544;
			if (yych <= 'z') goto xx103;
		}
	}
xx544:
#line 229 "./mql.re"
	{ MQL_TOKEN_RETURN("using", T_KEY_USING);  }
#line 3779 "./mql_lexer.cpp"
xx545:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx546;
	if (yych != 'a') goto xx104;
xx546:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx547;
	if (yych != 't') goto xx104;
xx547:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx548;
	if (yych != 'e') goto xx104;
xx548:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx549;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx549;
			if (yych <= 'z') goto xx103;
		}
	}
xx549:
#line 172 "./mql.re"
	{ MQL_TOKEN_RETURN("update", T_KEY_UPDATE); }
#line 3809 "./mql_lexer.cpp"
xx550:
	yych = *++YYCURSOR;
	if (yych == 'R') goto xx565;
	if (yych == 'r') goto xx565;
	goto xx104;
xx551:
	yych = *++YYCURSOR;
	if (yych <= 'V') {
		if (yych <= 'P') {
			if (yych != 'O') goto xx104;
		} else {
			if (yych <= 'Q') goto xx553;
			if (yych <= 'U') goto xx104;
			goto xx554;
		}
	} else {
		if (yych <= 'p') {
			if (yych != 'o') goto xx104;
		} else {
			if (yych <= 'q') goto xx553;
			if (yych == 'v') goto xx554;
			goto xx104;
		}
	}
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx563;
	if (yych == 'n') goto xx563;
	goto xx104;
xx553:
	yych = *++YYCURSOR;
	if (yych == 'U') goto xx560;
	if (yych == 'u') goto xx560;
	goto xx104;
xx554:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx555;
	if (yych != 'e') goto xx104;
xx555:
	yych = *++YYCURSOR;
	if (yych == 'R') goto xx556;
	if (yych != 'r') goto xx104;
xx556:
	yych = *++YYCURSOR;
	if (yych == 'S') goto xx557;
	if (yych != 's') goto xx104;
xx557:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx558;
	if (yych != 'e') goto xx104;
xx558:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx559;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx559;
			if (yych <= 'z') goto xx103;
		}
	}
xx559:
#line 224 "./mql.re"
	{ MQL_TOKEN_RETURN("universe", T_KEY_UNIVERSE);  }
#line 3876 "./mql_lexer.cpp"
xx560:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx561;
	if (yych != 'e') goto xx104;
xx561:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx562;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx562;
			if (yych <= 'z') goto xx103;
		}
	}
xx562:
#line 228 "./mql.re"
	{ MQL_TOKEN_RETURN("unique", T_KEY_UNIQUE);  }
#line 3898 "./mql_lexer.cpp"
xx563:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx564;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx564;
			if (yych <= 'z') goto xx103;
		}
	}
xx564:
#line 267 "./mql.re"
	{ MQL_TOKEN_RETURN("union", T_KEY_UNION); }
#line 3916 "./mql_lexer.cpp"
xx565:
	yych = *++YYCURSOR;
	if (yych == 'D') goto xx566;
	if (yych != 'd') goto xx104;
xx566:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx567;
	if (yych != 'e') goto xx104;
xx567:
	yych = *++YYCURSOR;
	if (yych == 'R') goto xx568;
	if (yych != 'r') goto xx104;
xx568:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx569;
	if (yych != 'e') goto xx104;
xx569:
	yych = *++YYCURSOR;
	if (yych == 'D') goto xx570;
	if (yych != 'd') goto xx104;
xx570:
	yych = *++YYCURSOR;
	if (yych == 'G') goto xx571;
	if (yych != 'g') goto xx104;
xx571:
	yych = *++YYCURSOR;
	if (yych == 'R') goto xx572;
	if (yych != 'r') goto xx104;
xx572:
	yych = *++YYCURSOR;
	if (yych == 'O') goto xx573;
	if (yych != 'o') goto xx104;
xx573:
	yych = *++YYCURSOR;
	if (yych == 'U') goto xx574;
	if (yych != 'u') goto xx104;
xx574:
	yych = *++YYCURSOR;
	if (yych == 'P') goto xx575;
	if (yych != 'p') goto xx104;
xx575:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx576;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx576;
			if (yych <= 'z') goto xx103;
		}
	}
xx576:
#line 173 "./mql.re"
	{ MQL_TOKEN_RETURN("unorderedgroup", T_KEY_UNORDERED_GROUP); }
#line 3974 "./mql_lexer.cpp"
xx577:
	yych = *++YYCURSOR;
	if (yych == 'L') goto xx608;
	if (yych == 'l') goto xx608;
	goto xx104;
xx578:
	yych = *++YYCURSOR;
	if (yych <= 'U') {
		if (yych <= 'M') {
			if (yych <= 'L') goto xx104;
			goto xx585;
		} else {
			if (yych <= 'N') goto xx586;
			if (yych <= 'T') goto xx104;
			goto xx587;
		}
	} else {
		if (yych <= 'n') {
			if (yych <= 'l') goto xx104;
			if (yych <= 'm') goto xx585;
			goto xx586;
		} else {
			if (yych == 'u') goto xx587;
			goto xx104;
		}
	}
xx579:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx580;
	if (yych != 'e') goto xx104;
xx580:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx581;
	if (yych != 'a') goto xx104;
xx581:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx582;
	if (yych != 't') goto xx104;
xx582:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx583;
	if (yych != 'e') goto xx104;
xx583:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx584;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx584;
			if (yych <= 'z') goto xx103;
		}
	}
xx584:
#line 171 "./mql.re"
	{ MQL_TOKEN_RETURN("create", T_KEY_CREATE); }
#line 4034 "./mql_lexer.cpp"
xx585:
	yych = *++YYCURSOR;
	if (yych <= 'P') {
		if (yych == 'M') goto xx598;
		if (yych <= 'O') goto xx104;
		goto xx599;
	} else {
		if (yych <= 'm') {
			if (yych <= 'l') goto xx104;
			goto xx598;
		} else {
			if (yych == 'p') goto xx599;
			goto xx104;
		}
	}
xx586:
	yych = *++YYCURSOR;
	if (yych == 'S') goto xx591;
	if (yych == 's') goto xx591;
	goto xx104;
xx587:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx588;
	if (yych != 'n') goto xx104;
xx588:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx589;
	if (yych != 't') goto xx104;
xx589:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx590;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx590;
			if (yych <= 'z') goto xx103;
		}
	}
xx590:
#line 258 "./mql.re"
	{ MQL_TOKEN_RETURN("count", T_KEY_COUNT); }
#line 4080 "./mql_lexer.cpp"
xx591:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx592;
	if (yych != 't') goto xx104;
xx592:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx593;
	if (yych != 'a') goto xx104;
xx593:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx594;
	if (yych != 'n') goto xx104;
xx594:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx595;
	if (yych != 't') goto xx104;
xx595:
	yych = *++YYCURSOR;
	if (yych == 'S') goto xx596;
	if (yych != 's') goto xx104;
xx596:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx597;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx597;
			if (yych <= 'z') goto xx103;
		}
	}
xx597:
#line 211 "./mql.re"
	{ MQL_TOKEN_RETURN("constants", T_KEY_CONSTANTS);  }
#line 4118 "./mql_lexer.cpp"
xx598:
	yych = *++YYCURSOR;
	if (yych == 'I') goto xx605;
	if (yych == 'i') goto xx605;
	goto xx104;
xx599:
	yych = *++YYCURSOR;
	if (yych == 'U') goto xx600;
	if (yych != 'u') goto xx104;
xx600:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx601;
	if (yych != 't') goto xx104;
xx601:
	yych = *++YYCURSOR;
	if (yych == 'E') goto xx602;
	if (yych != 'e') goto xx104;
xx602:
	yych = *++YYCURSOR;
	if (yych == 'D') goto xx603;
	if (yych != 'd') goto xx104;
xx603:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx604;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx604;
			if (yych <= 'z') goto xx103;
		}
	}
xx604:
#line 203 "./mql.re"
	{ MQL_TOKEN_RETURN("computed", T_KEY_COMPUTED);  }
#line 4157 "./mql_lexer.cpp"
xx605:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx606;
	if (yych != 't') goto xx104;
xx606:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx607;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx607;
			if (yych <= 'z') goto xx103;
		}
	}
xx607:
#line 185 "./mql.re"
	{ MQL_TOKEN_RETURN("commit", T_KEY_COMMIT); }
#line 4179 "./mql_lexer.cpp"
xx608:
	yych = *++YYCURSOR;
	if (yych == 'C') goto xx609;
	if (yych != 'c') goto xx104;
xx609:
	yych = *++YYCURSOR;
	if (yych == 'U') goto xx610;
	if (yych != 'u') goto xx104;
xx610:
	yych = *++YYCURSOR;
	if (yych == 'L') goto xx611;
	if (yych != 'l') goto xx104;
xx611:
	yych = *++YYCURSOR;
	if (yych == 'A') goto xx612;
	if (yych != 'a') goto xx104;
xx612:
	yych = *++YYCURSOR;
	if (yych == 'T') goto xx613;
	if (yych != 't') goto xx104;
xx613:
	yych = *++YYCURSOR;
	if (yych == 'I') goto xx614;
	if (yych != 'i') goto xx104;
xx614:
	yych = *++YYCURSOR;
	if (yych == 'O') goto xx615;
	if (yych != 'o') goto xx104;
xx615:
	yych = *++YYCURSOR;
	if (yych == 'N') goto xx616;
	if (yych != 'n') goto xx104;
xx616:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto xx617;
		if (yych <= '9') goto xx103;
		if (yych >= 'A') goto xx103;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto xx103;
		} else {
			if (yych <= '`') goto xx617;
			if (yych <= 'z') goto xx103;
		}
	}
xx617:
#line 252 "./mql.re"
	{ MQL_TOKEN_RETURN("calculation", T_KEY_CALCULATION); }
#line 4229 "./mql_lexer.cpp"
}
#line 321 "./mql.re"


stringdq:
	tok = cur;

#line 4237 "./mql_lexer.cpp"
{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if (yych <= '!') {
		if (yych <= 0x00) goto xx624;
		if (yych == '\n') goto xx627;
		goto xx626;
	} else {
		if (yych <= '"') goto xx620;
		if (yych == '\\') goto xx622;
		goto xx626;
	}
xx620:
	++YYCURSOR;
#line 326 "./mql.re"
	{ MQL_TOKEN_RETURN(STRING_MAGIC, T_STRING); }
#line 4254 "./mql_lexer.cpp"
xx622:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych <= 'b') {
		if (yych <= '3') {
			if (yych <= '&') {
				if (yych == '"') goto xx632;
			} else {
				if (yych <= '\'') goto xx634;
				if (yych >= '0') goto xx631;
			}
		} else {
			if (yych <= '[') {
				if (yych == '?') goto xx636;
			} else {
				if (yych <= '\\') goto xx638;
				if (yych <= '`') goto xx623;
				if (yych <= 'a') goto xx644;
				goto xx646;
			}
		}
	} else {
		if (yych <= 'r') {
			if (yych <= 'm') {
				if (yych == 'f') goto xx640;
			} else {
				if (yych <= 'n') goto xx652;
				if (yych >= 'r') goto xx642;
			}
		} else {
			if (yych <= 'u') {
				if (yych == 't') goto xx650;
			} else {
				if (yych <= 'v') goto xx648;
				if (yych == 'x') goto xx629;
			}
		}
	}
xx623:
#line 353 "./mql.re"
	{ yylval->pString->push_back(*tok);
			       goto stringdq; }
#line 4296 "./mql_lexer.cpp"
xx624:
	++YYCURSOR;
#line 352 "./mql.re"
	{ if (cur >= lim) { goto end; } }
#line 4301 "./mql_lexer.cpp"
xx626:
	yych = *++YYCURSOR;
	goto xx623;
xx627:
	++YYCURSOR;
#line 355 "./mql.re"
	{ yylval->pString->push_back('\n');
			       goto stringdq; }
#line 4310 "./mql_lexer.cpp"
xx629:
	yych = *++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto xx630;
		if (yych <= '9') goto xx657;
	} else {
		if (yych <= 'F') goto xx657;
		if (yych <= '`') goto xx630;
		if (yych <= 'f') goto xx657;
	}
xx630:
	YYCURSOR = YYMARKER;
	goto xx623;
xx631:
	yych = *++YYCURSOR;
	if (yych <= '/') goto xx630;
	if (yych <= '7') goto xx654;
	goto xx630;
xx632:
	++YYCURSOR;
#line 337 "./mql.re"
	{ yylval->pString->push_back('\"'); goto stringdq; }
#line 4333 "./mql_lexer.cpp"
xx634:
	++YYCURSOR;
#line 336 "./mql.re"
	{ yylval->pString->push_back('\''); goto stringdq; }
#line 4338 "./mql_lexer.cpp"
xx636:
	++YYCURSOR;
#line 335 "./mql.re"
	{ yylval->pString->push_back('\?'); goto stringdq; }
#line 4343 "./mql_lexer.cpp"
xx638:
	++YYCURSOR;
#line 334 "./mql.re"
	{ yylval->pString->push_back('\\'); goto stringdq; }
#line 4348 "./mql_lexer.cpp"
xx640:
	++YYCURSOR;
#line 333 "./mql.re"
	{ yylval->pString->push_back('\f'); goto stringdq; }
#line 4353 "./mql_lexer.cpp"
xx642:
	++YYCURSOR;
#line 332 "./mql.re"
	{ yylval->pString->push_back('\r'); goto stringdq; }
#line 4358 "./mql_lexer.cpp"
xx644:
	++YYCURSOR;
#line 331 "./mql.re"
	{ yylval->pString->push_back('\a'); goto stringdq; }
#line 4363 "./mql_lexer.cpp"
xx646:
	++YYCURSOR;
#line 330 "./mql.re"
	{ yylval->pString->push_back('\b'); goto stringdq; }
#line 4368 "./mql_lexer.cpp"
xx648:
	++YYCURSOR;
#line 329 "./mql.re"
	{ yylval->pString->push_back('\v'); goto stringdq; }
#line 4373 "./mql_lexer.cpp"
xx650:
	++YYCURSOR;
#line 328 "./mql.re"
	{ yylval->pString->push_back('\t'); goto stringdq; }
#line 4378 "./mql_lexer.cpp"
xx652:
	++YYCURSOR;
#line 327 "./mql.re"
	{ yylval->pString->push_back('\n'); goto stringdq; }
#line 4383 "./mql_lexer.cpp"
xx654:
	yych = *++YYCURSOR;
	if (yych <= '/') goto xx630;
	if (yych >= '8') goto xx630;
	++YYCURSOR;
#line 338 "./mql.re"
	{ tok += 1; // Go past SLASH 
      		        char szOctal[4];
			const char *p = tok;
			char *q = &(szOctal[0]);
			*q++ = *p++;
			*q++ = *p++;
			*q++ = *p++;
			*q = '\0';
		        yylval->pString->push_back(octal2char(szOctal)); 
		        goto stringdq; }
#line 4400 "./mql_lexer.cpp"
xx657:
	yych = *++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto xx630;
		if (yych >= ':') goto xx630;
	} else {
		if (yych <= 'F') goto xx658;
		if (yych <= '`') goto xx630;
		if (yych >= 'g') goto xx630;
	}
xx658:
	++YYCURSOR;
#line 348 "./mql.re"
	{ 
			       	      yylval->pString->push_back(hex2char(tok[2], tok[3]));
			       	      goto stringdq; 			     
                             }
#line 4418 "./mql_lexer.cpp"
}
#line 357 "./mql.re"


stringsq:
	tok = cur;

#line 4426 "./mql_lexer.cpp"
{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if (yych <= '\n') {
		if (yych <= 0x00) goto xx664;
		if (yych <= '\t') goto xx668;
		goto xx666;
	} else {
		if (yych != '\'') goto xx668;
	}
	++YYCURSOR;
#line 362 "./mql.re"
	{ MQL_TOKEN_RETURN(STRING_MAGIC, T_STRING); }
#line 4440 "./mql_lexer.cpp"
xx664:
	++YYCURSOR;
#line 363 "./mql.re"
	{ if (cur >= lim) { goto end; } }
#line 4445 "./mql_lexer.cpp"
xx666:
	++YYCURSOR;
#line 364 "./mql.re"
	{ yylval->pString->push_back('\n');
			       goto stringsq; }
#line 4451 "./mql_lexer.cpp"
xx668:
	++YYCURSOR;
#line 366 "./mql.re"
	{ yylval->pString->push_back(*tok);
			       goto stringsq; }
#line 4457 "./mql_lexer.cpp"
}
#line 368 "./mql.re"

	
 end:
	return 0;
}


void MQLScanner::addToken(void)
{
	yylval->setString(new std::string);
	std::string::size_type length = cur - tok;
	yylval->pString->reserve(length);
	yylval->pString->append(tok, length);
/*
	const char *p;
	for (p = tok;
	     p != cur;
	     ++p) {
	     yylval->pString->push_back(*p);
	}
*/
}

void MQLScanner::addInteger(void)
{
	const unsigned int MAX_INTEGER_CHARS = 20;
	unsigned int cnt = cur - tok;
	if (cnt > MAX_INTEGER_CHARS) {
	   	std::string mystring;
		const char *p;
		for (p = tok;
		     p != cur;
	     	     ++p) {
		     mystring.push_back(*p);
		}
		yylval->setInteger(sz2longlong(mystring.c_str()));
        } else {
		char szInt[MAX_INTEGER_CHARS+1];

		const char *p;
		char *q = szInt;
		for (p = tok;
		     p != cur;
	     	     ++p) {
		     *q++ = *p;
		}
		*q = '\0';
		yylval->setInteger(sz2longlong(szInt));
	}
}

void MQLScanner::getString(std::string& str)
{
	std::string::size_type length = cur - tok;
	str.reserve(length);
	str.append(tok, length);
	/*
	const char *p;
	for (p = tok;
	     p != cur;
	     ++p) {
	     str.push_back(*p);
	}
*/

}

