//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Emdros {

public class BookcaseIndexer : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal BookcaseIndexer(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(BookcaseIndexer obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~BookcaseIndexer() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          csemdrosPINVOKE.delete_BookcaseIndexer(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public BookcaseIndexer(EmdrosEnv pSourceEnv, EmdrosEnv pTargetEnv, SWIGTYPE_p_std__ostream pMQLOutStream, string bookcase_OTN, string indexed_OTN, string indexed_feature_name_list, EmdrosFTSStringFilter pStringFilter) : this(csemdrosPINVOKE.new_BookcaseIndexer(EmdrosEnv.getCPtr(pSourceEnv), EmdrosEnv.getCPtr(pTargetEnv), SWIGTYPE_p_std__ostream.getCPtr(pMQLOutStream), bookcase_OTN, indexed_OTN, indexed_feature_name_list, EmdrosFTSStringFilter.getCPtr(pStringFilter)), true) {
    if (csemdrosPINVOKE.SWIGPendingException.Pending) throw csemdrosPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual bool process(SetOfMonads substrate, bool bEmitVacuum) {
    bool ret = csemdrosPINVOKE.BookcaseIndexer_process__SWIG_0(swigCPtr, SetOfMonads.getCPtr(substrate), bEmitVacuum);
    if (csemdrosPINVOKE.SWIGPendingException.Pending) throw csemdrosPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool process(SetOfMonads substrate) {
    bool ret = csemdrosPINVOKE.BookcaseIndexer_process__SWIG_1(swigCPtr, SetOfMonads.getCPtr(substrate));
    if (csemdrosPINVOKE.SWIGPendingException.Pending) throw csemdrosPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string errorMessage() {
    string ret = csemdrosPINVOKE.BookcaseIndexer_errorMessage(swigCPtr);
    if (csemdrosPINVOKE.SWIGPendingException.Pending) throw csemdrosPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
