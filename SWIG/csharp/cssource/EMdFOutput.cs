//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Emdros {

public class EMdFOutput : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal EMdFOutput(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(EMdFOutput obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~EMdFOutput() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          csemdrosPINVOKE.delete_EMdFOutput(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public EMdFOutput(eCharsets charset, SWIGTYPE_p_std__ostream pStream, eOutputKind output_kind, int indent_chars) : this(csemdrosPINVOKE.new_EMdFOutput__SWIG_0((int)charset, SWIGTYPE_p_std__ostream.getCPtr(pStream), (int)output_kind, indent_chars), true) {
    if (csemdrosPINVOKE.SWIGPendingException.Pending) throw csemdrosPINVOKE.SWIGPendingException.Retrieve();
  }

  public EMdFOutput(eCharsets charset, SWIGTYPE_p_std__ostream pStream, eOutputKind output_kind) : this(csemdrosPINVOKE.new_EMdFOutput__SWIG_1((int)charset, SWIGTYPE_p_std__ostream.getCPtr(pStream), (int)output_kind), true) {
    if (csemdrosPINVOKE.SWIGPendingException.Pending) throw csemdrosPINVOKE.SWIGPendingException.Retrieve();
  }

  public eOutputKind getOutputKind() {
    eOutputKind ret = (eOutputKind)csemdrosPINVOKE.EMdFOutput_getOutputKind(swigCPtr);
    if (csemdrosPINVOKE.SWIGPendingException.Pending) throw csemdrosPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void newline() {
    csemdrosPINVOKE.EMdFOutput_newline(swigCPtr);
    if (csemdrosPINVOKE.SWIGPendingException.Pending) throw csemdrosPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isXML() {
    bool ret = csemdrosPINVOKE.EMdFOutput_isXML(swigCPtr);
    if (csemdrosPINVOKE.SWIGPendingException.Pending) throw csemdrosPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isJSON() {
    bool ret = csemdrosPINVOKE.EMdFOutput_isJSON(swigCPtr);
    if (csemdrosPINVOKE.SWIGPendingException.Pending) throw csemdrosPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
