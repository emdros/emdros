/* Generated by re2c 0.14.3 on Fri Jun  8 18:26:45 2018 */
#line 1 "./templatelang.re"
/*
 * templatelang.re
 *
 * Template language lexer based on re2c
 *
 * Ulrik Sandborg-Petersen
 * Created: 7/28-2008
 * Last update: 11/16-2016
 *
 */
#include <templatelang_lexer.h>
#include "templatelangpars.h"
#include <iostream>
#include <string_func.h>

#define YYCTYPE         unsigned char
#define YYCURSOR        cur
#define YYLIMIT         lim
#define YYMARKER        ptr
#line 23 "./templatelang.re"



#line 58 "./templatelang.re"



TemplateLanguageScanner::TemplateLanguageScanner(const std::string& strIn)
{
	sz = strIn.c_str();
	lim = sz + strIn.length();
	bot = tok = ptr = pos = top = eof = 0;
	cur = sz;
}

TemplateLanguageScanner::~TemplateLanguageScanner()
{
	if (bot) {
		delete[] bot;
	}
}

/*
char *TemplateLanguageScanner::fill(char *cursor)
{
        if(!eof)
        {
                unsigned int cnt = tok - bot;
                if(cnt)
                {
                        memcpy(bot, tok, lim - tok);
                        tok = bot;
                        ptr -= cnt;
                        cursor -= cnt;
                        pos -= cnt;
                        lim -= cnt;
                }
                if((top - lim) < BSIZE)
                {
                        char *buf = new char[(lim - bot) + BSIZE];
                        memcpy(buf, tok, lim - tok);
                        tok = buf;
                        ptr = &buf[ptr - bot];
                        cursor = &buf[cursor - bot];
                        pos = &buf[pos - bot];
                        lim = &buf[lim - bot];
                        top = &lim[BSIZE];
                        delete [] bot;
                        bot = buf;
                }
                pIn->read(lim, BSIZE);
                if ((cnt = pIn->gcount()) != BSIZE )
                {
                        eof = &lim[cnt]; *eof++ = '\0';
                }
                lim += cnt;
        }
        return cursor;
}
*/

#define TEMPLATELANG_TOKEN_RETURN(X,Y) { yylval->setName(X); return Y; }

int TemplateLanguageScanner::scan(Token *pYYLVAL)
{
	yylval = pYYLVAL;

/* scan: */
	tok = cur;


#line 95 "./templatelang_lexer.cpp"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;

	yych = *YYCURSOR;
	if (yych <= 'Z') {
		if (yych <= 0x1F) {
			if (yych <= '\t') {
				if (yych <= 0x00) goto tt21;
				if (yych <= 0x08) goto tt24;
				goto tt15;
			} else {
				if (yych <= '\n') goto tt19;
				if (yych == '\r') goto tt17;
				goto tt24;
			}
		} else {
			if (yych <= '\'') {
				if (yych <= ' ') goto tt2;
				if (yych <= '&') goto tt24;
				goto tt13;
			} else {
				if (yych <= '/') goto tt24;
				if (yych <= '9') goto tt11;
				if (yych <= '@') goto tt24;
				goto tt10;
			}
		}
	} else {
		if (yych <= 'c') {
			if (yych <= '^') {
				if (yych == '\\') goto tt23;
				goto tt24;
			} else {
				if (yych == '`') goto tt24;
				if (yych <= 'b') goto tt10;
				goto tt6;
			}
		} else {
			if (yych <= 'u') {
				if (yych == 'f') goto tt8;
				goto tt10;
			} else {
				if (yych <= 'v') goto tt9;
				if (yych <= 'z') goto tt10;
				if (yych <= '{') goto tt4;
				goto tt24;
			}
		}
	}
tt2:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == '}') goto tt421;
tt3:
#line 176 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN(" ", T_TEMPLATELANG_KEY_SPACE); }
#line 153 "./templatelang_lexer.cpp"
tt4:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == '{') goto tt74;
tt5:
#line 183 "./templatelang.re"
	{ yylval->setChar(*tok); TEMPLATELANG_TOKEN_RETURN(CHAR_MAGIC, T_TEMPLATELANG_CHAR);}
#line 161 "./templatelang_lexer.cpp"
tt6:
	++YYCURSOR;
	if ((yych = *YYCURSOR) == 'o') goto tt67;
	goto tt32;
tt7:
#line 170 "./templatelang.re"
	{ addToken(); TEMPLATELANG_TOKEN_RETURN("identifier", T_TEMPLATELANG_IDENTIFIER);}
#line 169 "./templatelang_lexer.cpp"
tt8:
	yych = *++YYCURSOR;
	if (yych == 'e') goto tt45;
	if (yych == 'o') goto tt46;
	goto tt32;
tt9:
	yych = *++YYCURSOR;
	if (yych == 'a') goto tt33;
	goto tt32;
tt10:
	yych = *++YYCURSOR;
	goto tt32;
tt11:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto tt30;
tt12:
#line 171 "./templatelang.re"
	{ addInteger();
                         TEMPLATELANG_TOKEN_RETURN(INTEGER_MAGIC, T_TEMPLATELANG_INTEGER); }
#line 190 "./templatelang_lexer.cpp"
tt13:
	++YYCURSOR;
#line 173 "./templatelang.re"
	{ yylval->setString(new std::string);
		         goto stringsq; 
                       }
#line 197 "./templatelang_lexer.cpp"
tt15:
	++YYCURSOR;
#line 177 "./templatelang.re"
	{ yylval->setChar('\t'); TEMPLATELANG_TOKEN_RETURN(CHAR_MAGIC, T_TEMPLATELANG_CHAR); }
#line 202 "./templatelang_lexer.cpp"
tt17:
	++YYCURSOR;
#line 178 "./templatelang.re"
	{ yylval->setChar('\r'); TEMPLATELANG_TOKEN_RETURN(CHAR_MAGIC, T_TEMPLATELANG_CHAR); }
#line 207 "./templatelang_lexer.cpp"
tt19:
	++YYCURSOR;
#line 179 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("\\n", T_TEMPLATELANG_KEY_NEWLINE); }
#line 212 "./templatelang_lexer.cpp"
tt21:
	++YYCURSOR;
#line 180 "./templatelang.re"
	{ if (cur >= lim) { goto end; } }
#line 217 "./templatelang_lexer.cpp"
tt23:
	yych = *++YYCURSOR;
	if (yych == '\'') goto tt25;
	if (yych == '\\') goto tt27;
	goto tt5;
tt24:
	yych = *++YYCURSOR;
	goto tt5;
tt25:
	++YYCURSOR;
#line 182 "./templatelang.re"
	{ yylval->setChar('\''); TEMPLATELANG_TOKEN_RETURN(CHAR_MAGIC, T_TEMPLATELANG_CHAR); }
#line 230 "./templatelang_lexer.cpp"
tt27:
	++YYCURSOR;
#line 181 "./templatelang.re"
	{ yylval->setChar('\\'); TEMPLATELANG_TOKEN_RETURN(CHAR_MAGIC, T_TEMPLATELANG_CHAR); }
#line 235 "./templatelang_lexer.cpp"
tt29:
	++YYCURSOR;
	yych = *YYCURSOR;
tt30:
	if (yych <= '/') goto tt12;
	if (yych <= '9') goto tt29;
	goto tt12;
tt31:
	++YYCURSOR;
	yych = *YYCURSOR;
tt32:
	if (yych <= 'Z') {
		if (yych <= '/') goto tt7;
		if (yych <= '9') goto tt31;
		if (yych <= '@') goto tt7;
		goto tt31;
	} else {
		if (yych <= '_') {
			if (yych <= '^') goto tt7;
			goto tt31;
		} else {
			if (yych <= '`') goto tt7;
			if (yych <= 'z') goto tt31;
			goto tt7;
		}
	}
tt33:
	yych = *++YYCURSOR;
	if (yych != 'r') goto tt32;
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= '^') {
		if (yych <= '9') {
			if (yych >= '0') goto tt31;
		} else {
			if (yych <= '@') goto tt35;
			if (yych <= 'Z') goto tt31;
		}
	} else {
		if (yych <= 'm') {
			if (yych != '`') goto tt31;
		} else {
			if (yych <= 'n') goto tt36;
			if (yych <= 'z') goto tt31;
		}
	}
tt35:
#line 156 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("bare-var", T_TEMPLATELANG_KEY_BARE_VAR); }
#line 284 "./templatelang_lexer.cpp"
tt36:
	yych = *++YYCURSOR;
	if (yych != 'o') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 'm') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 'a') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 'n') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 'g') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 'l') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt32;
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto tt44;
		if (yych <= '9') goto tt31;
		if (yych >= 'A') goto tt31;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto tt31;
		} else {
			if (yych <= '`') goto tt44;
			if (yych <= 'z') goto tt31;
		}
	}
tt44:
#line 157 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("bare-varnomangle", T_TEMPLATELANG_KEY_BARE_VARNOMANGLE); }
#line 316 "./templatelang_lexer.cpp"
tt45:
	yych = *++YYCURSOR;
	if (yych == 'a') goto tt52;
	goto tt32;
tt46:
	yych = *++YYCURSOR;
	if (yych != 'r') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 'm') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 'a') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt32;
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto tt51;
		if (yych <= '9') goto tt31;
		if (yych >= 'A') goto tt31;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto tt31;
		} else {
			if (yych <= '`') goto tt51;
			if (yych <= 'z') goto tt31;
		}
	}
tt51:
#line 155 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("bare-format", T_TEMPLATELANG_KEY_BARE_FORMAT); }
#line 346 "./templatelang_lexer.cpp"
tt52:
	yych = *++YYCURSOR;
	if (yych != 't') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 'u') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 'r') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt32;
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= '^') {
		if (yych <= '9') {
			if (yych >= '0') goto tt31;
		} else {
			if (yych <= '@') goto tt57;
			if (yych <= 'Z') goto tt31;
		}
	} else {
		if (yych <= 'm') {
			if (yych != '`') goto tt31;
		} else {
			if (yych <= 'n') goto tt58;
			if (yych <= 'z') goto tt31;
		}
	}
tt57:
#line 154 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("bare-feature", T_TEMPLATELANG_KEY_BARE_FEATURE); }
#line 375 "./templatelang_lexer.cpp"
tt58:
	yych = *++YYCURSOR;
	if (yych != 'o') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 'm') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 'a') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 'n') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 'g') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 'l') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt32;
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto tt66;
		if (yych <= '9') goto tt31;
		if (yych >= 'A') goto tt31;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto tt31;
		} else {
			if (yych <= '`') goto tt66;
			if (yych <= 'z') goto tt31;
		}
	}
tt66:
#line 160 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("bare-featurenomangle", T_TEMPLATELANG_KEY_BARE_FEATURENOMANGLE); }
#line 407 "./templatelang_lexer.cpp"
tt67:
	yych = *++YYCURSOR;
	if (yych != 'u') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 'n') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt32;
	yych = *++YYCURSOR;
	if (yych != 'r') goto tt32;
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 'Z') {
		if (yych <= '/') goto tt73;
		if (yych <= '9') goto tt31;
		if (yych >= 'A') goto tt31;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto tt31;
		} else {
			if (yych <= '`') goto tt73;
			if (yych <= 'z') goto tt31;
		}
	}
tt73:
#line 153 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("bare-counter", T_TEMPLATELANG_KEY_BARE_COUNTER); }
#line 435 "./templatelang_lexer.cpp"
tt74:
	yych = *++YYCURSOR;
	if (yych == ' ') goto tt76;
tt75:
	YYCURSOR = YYMARKER;
	if (yyaccept <= 3) {
		if (yyaccept <= 1) {
			if (yyaccept == 0) {
				goto tt3;
			} else {
				goto tt5;
			}
		} else {
			if (yyaccept == 2) {
				goto tt132;
			} else {
				goto tt145;
			}
		}
	} else {
		if (yyaccept <= 5) {
			if (yyaccept == 4) {
				goto tt225;
			} else {
				goto tt269;
			}
		} else {
			goto tt324;
		}
	}
tt76:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto tt78;
	case 'c':	goto tt79;
	case 'd':	goto tt81;
	case 'e':	goto tt83;
	case 'f':	goto tt80;
	case 'i':	goto tt77;
	case 'l':	goto tt85;
	case 'n':	goto tt84;
	case 's':	goto tt82;
	default:	goto tt75;
	}
tt77:
	yych = *++YYCURSOR;
	if (yych <= 'e') {
		if (yych == 'd') goto tt334;
		goto tt75;
	} else {
		if (yych <= 'f') goto tt336;
		if (yych == 'n') goto tt335;
		goto tt75;
	}
tt78:
	yych = *++YYCURSOR;
	if (yych == 't') goto tt319;
	goto tt75;
tt79:
	yych = *++YYCURSOR;
	if (yych == 'o') goto tt302;
	goto tt75;
tt80:
	yych = *++YYCURSOR;
	if (yych == 'e') goto tt263;
	if (yych == 'i') goto tt262;
	goto tt75;
tt81:
	yych = *++YYCURSOR;
	if (yych <= 'd') {
		if (yych == 'b') goto tt233;
		goto tt75;
	} else {
		if (yych <= 'e') goto tt235;
		if (yych == 'i') goto tt234;
		goto tt75;
	}
tt82:
	yych = *++YYCURSOR;
	if (yych == 'e') goto tt184;
	goto tt75;
tt83:
	yych = *++YYCURSOR;
	if (yych <= 'k') goto tt75;
	if (yych <= 'l') goto tt162;
	if (yych <= 'm') goto tt164;
	if (yych <= 'n') goto tt163;
	goto tt75;
tt84:
	yych = *++YYCURSOR;
	if (yych == 'a') goto tt119;
	goto tt75;
tt85:
	yych = *++YYCURSOR;
	if (yych != 'i') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 's') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych <= 'b') {
		if (yych == 'a') goto tt91;
		goto tt75;
	} else {
		if (yych <= 'c') goto tt89;
		if (yych == 'e') goto tt90;
		goto tt75;
	}
tt89:
	yych = *++YYCURSOR;
	if (yych == 'l') goto tt114;
	goto tt75;
tt90:
	yych = *++YYCURSOR;
	if (yych == 'm') goto tt110;
	goto tt75;
tt91:
	yych = *++YYCURSOR;
	if (yych != 'p') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'p') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'n') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'd') goto tt75;
	yych = *++YYCURSOR;
	if (yych == 'b') goto tt98;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych == 'n') goto tt104;
	goto tt75;
tt98:
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'g') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'i') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'n') goto tt75;
	++YYCURSOR;
#line 133 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("listappendbegin", T_TEMPLATELANG_KEY_LISTAPPENDBEGIN); }
#line 581 "./templatelang_lexer.cpp"
tt104:
	yych = *++YYCURSOR;
	if (yych != 'd') goto tt75;
	yych = *++YYCURSOR;
	if (yych != ' ') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	++YYCURSOR;
#line 134 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("listappendend", T_TEMPLATELANG_KEY_LISTAPPENDEND); }
#line 594 "./templatelang_lexer.cpp"
tt110:
	yych = *++YYCURSOR;
	if (yych != 'i') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	++YYCURSOR;
#line 135 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("listemit", T_TEMPLATELANG_KEY_LISTEMIT); }
#line 603 "./templatelang_lexer.cpp"
tt114:
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'a') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'r') goto tt75;
	++YYCURSOR;
#line 136 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("listclear", T_TEMPLATELANG_KEY_LISTCLEAR); }
#line 614 "./templatelang_lexer.cpp"
tt119:
	yych = *++YYCURSOR;
	if (yych != 'm') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'd') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 's') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto tt129;
	case 'c':	goto tt126;
	case 'e':	goto tt127;
	case 'r':	goto tt128;
	default:	goto tt75;
	}
tt126:
	yych = *++YYCURSOR;
	if (yych == 'l') goto tt157;
	goto tt75;
tt127:
	yych = *++YYCURSOR;
	if (yych == 'm') goto tt153;
	goto tt75;
tt128:
	yych = *++YYCURSOR;
	if (yych == 'e') goto tt140;
	goto tt75;
tt129:
	yych = *++YYCURSOR;
	if (yych != 'd') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'd') goto tt75;
	yyaccept = 2;
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'e') goto tt133;
tt132:
#line 137 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("namedsetadd", T_TEMPLATELANG_KEY_NAMEDSETADD); }
#line 659 "./templatelang_lexer.cpp"
tt133:
	yych = *++YYCURSOR;
	if (yych != 'n') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'd') goto tt75;
	yych = *++YYCURSOR;
	if (yych != ' ') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	++YYCURSOR;
#line 138 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("namedsetaddend", T_TEMPLATELANG_KEY_NAMEDSETADDEND); }
#line 674 "./templatelang_lexer.cpp"
tt140:
	yych = *++YYCURSOR;
	if (yych != 'm') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'o') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'v') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yyaccept = 3;
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'e') goto tt146;
tt145:
#line 139 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("namedsetremove", T_TEMPLATELANG_KEY_NAMEDSETREMOVE); }
#line 690 "./templatelang_lexer.cpp"
tt146:
	yych = *++YYCURSOR;
	if (yych != 'n') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'd') goto tt75;
	yych = *++YYCURSOR;
	if (yych != ' ') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	++YYCURSOR;
#line 140 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("namedsetremoveend", T_TEMPLATELANG_KEY_NAMEDSETREMOVEEND); }
#line 705 "./templatelang_lexer.cpp"
tt153:
	yych = *++YYCURSOR;
	if (yych != 'i') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	++YYCURSOR;
#line 141 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("namedsetemit", T_TEMPLATELANG_KEY_NAMEDSETEMIT); }
#line 714 "./templatelang_lexer.cpp"
tt157:
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'a') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'r') goto tt75;
	++YYCURSOR;
#line 142 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("namedsetclear", T_TEMPLATELANG_KEY_NAMEDSETCLEAR); }
#line 725 "./templatelang_lexer.cpp"
tt162:
	yych = *++YYCURSOR;
	if (yych == 's') goto tt178;
	goto tt75;
tt163:
	yych = *++YYCURSOR;
	if (yych == 'd') goto tt171;
	goto tt75;
tt164:
	yych = *++YYCURSOR;
	if (yych != 'i') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'v') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'a') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'r') goto tt75;
	++YYCURSOR;
#line 148 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("emitvar", T_TEMPLATELANG_KEY_EMITVAR); }
#line 748 "./templatelang_lexer.cpp"
tt171:
	yych = *++YYCURSOR;
	if (yych != 'i') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'f') goto tt75;
	yych = *++YYCURSOR;
	if (yych != ' ') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	++YYCURSOR;
#line 127 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("endif", T_TEMPLATELANG_KEY_ENDIF); }
#line 763 "./templatelang_lexer.cpp"
tt178:
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych != ' ') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	++YYCURSOR;
#line 126 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("else", T_TEMPLATELANG_KEY_ELSE); }
#line 776 "./templatelang_lexer.cpp"
tt184:
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych <= 'm') {
		if (yych == 'c') goto tt188;
		goto tt75;
	} else {
		if (yych <= 'n') goto tt187;
		if (yych != 'v') goto tt75;
	}
	yych = *++YYCURSOR;
	if (yych == 'a') goto tt223;
	goto tt75;
tt187:
	yych = *++YYCURSOR;
	if (yych == 'i') goto tt196;
	goto tt75;
tt188:
	yych = *++YYCURSOR;
	if (yych != 'o') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'u') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'n') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'r') goto tt75;
	++YYCURSOR;
#line 149 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("setcounter", T_TEMPLATELANG_KEY_SETCOUNTER); }
#line 811 "./templatelang_lexer.cpp"
tt196:
	yych = *++YYCURSOR;
	if (yych != 'x') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'i') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'n') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'g') goto tt75;
	yych = *++YYCURSOR;
	if (yych != ' ') goto tt75;
	yych = *++YYCURSOR;
	if (yych <= 'c') {
		if (yych == 'a') goto tt204;
		goto tt75;
	} else {
		if (yych <= 'd') goto tt203;
		if (yych != 'o') goto tt75;
	}
	yych = *++YYCURSOR;
	if (yych == 'f') goto tt217;
	goto tt75;
tt203:
	yych = *++YYCURSOR;
	if (yych == 'o') goto tt211;
	goto tt75;
tt204:
	yych = *++YYCURSOR;
	if (yych != 'l') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'l') goto tt75;
	yych = *++YYCURSOR;
	if (yych != ' ') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	++YYCURSOR;
#line 145 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("setnixing all", T_TEMPLATELANG_KEY_SETNIXING_ALL); }
#line 852 "./templatelang_lexer.cpp"
tt211:
	yych = *++YYCURSOR;
	if (yych != 'c') goto tt75;
	yych = *++YYCURSOR;
	if (yych != ' ') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	++YYCURSOR;
#line 146 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("setnixing doc", T_TEMPLATELANG_KEY_SETNIXING_DOC); }
#line 865 "./templatelang_lexer.cpp"
tt217:
	yych = *++YYCURSOR;
	if (yych != 'f') goto tt75;
	yych = *++YYCURSOR;
	if (yych != ' ') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	++YYCURSOR;
#line 147 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("setnixing off", T_TEMPLATELANG_KEY_SETNIXING_OFF); }
#line 878 "./templatelang_lexer.cpp"
tt223:
	yych = *++YYCURSOR;
	if (yych != 'r') goto tt75;
	yyaccept = 4;
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'e') goto tt226;
tt225:
#line 144 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("setvar", T_TEMPLATELANG_KEY_SETVAR); }
#line 888 "./templatelang_lexer.cpp"
tt226:
	yych = *++YYCURSOR;
	if (yych != 'n') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'd') goto tt75;
	yych = *++YYCURSOR;
	if (yych != ' ') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	++YYCURSOR;
#line 143 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("setvarend", T_TEMPLATELANG_KEY_SETVAREND); }
#line 903 "./templatelang_lexer.cpp"
tt233:
	yych = *++YYCURSOR;
	if (yych == 'n') goto tt254;
	goto tt75;
tt234:
	yych = *++YYCURSOR;
	if (yych == 'c') goto tt245;
	goto tt75;
tt235:
	yych = *++YYCURSOR;
	if (yych != 'c') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'c') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'o') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'u') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'n') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'r') goto tt75;
	++YYCURSOR;
#line 151 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("deccounter", T_TEMPLATELANG_KEY_DECCOUNTER); }
#line 932 "./templatelang_lexer.cpp"
tt245:
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'l') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'o') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'o') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'k') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'u') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'p') goto tt75;
	++YYCURSOR;
#line 131 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("dictlookup", T_TEMPLATELANG_KEY_DICTLOOKUP); }
#line 951 "./templatelang_lexer.cpp"
tt254:
	yych = *++YYCURSOR;
	if (yych != 'a') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'm') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych != ' ') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	++YYCURSOR;
#line 130 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("dbname", T_TEMPLATELANG_KEY_DBNAME); }
#line 968 "./templatelang_lexer.cpp"
tt262:
	yych = *++YYCURSOR;
	if (yych == 'r') goto tt290;
	goto tt75;
tt263:
	yych = *++YYCURSOR;
	if (yych != 'a') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'u') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'r') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yyaccept = 5;
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'j') goto tt271;
	if (yych == 'n') goto tt270;
tt269:
#line 152 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("feature", T_TEMPLATELANG_KEY_FEATURE); }
#line 991 "./templatelang_lexer.cpp"
tt270:
	yych = *++YYCURSOR;
	if (yych == 'o') goto tt282;
	goto tt75;
tt271:
	yych = *++YYCURSOR;
	if (yych != 's') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'o') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'n') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'm') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'a') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'n') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'g') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'l') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	++YYCURSOR;
#line 159 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("featurejsonmangle", T_TEMPLATELANG_KEY_FEATUREJSONMANGLE); }
#line 1018 "./templatelang_lexer.cpp"
tt282:
	yych = *++YYCURSOR;
	if (yych != 'm') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'a') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'n') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'g') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'l') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	++YYCURSOR;
#line 158 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("featurenomangle", T_TEMPLATELANG_KEY_FEATURENOMANGLE); }
#line 1035 "./templatelang_lexer.cpp"
tt290:
	yych = *++YYCURSOR;
	if (yych != 's') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'm') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'o') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'n') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'a') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'd') goto tt75;
	yych = *++YYCURSOR;
	if (yych != ' ') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	++YYCURSOR;
#line 129 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("firstmonad", T_TEMPLATELANG_KEY_FIRSTMONAD); }
#line 1060 "./templatelang_lexer.cpp"
tt302:
	yych = *++YYCURSOR;
	if (yych == 'p') goto tt303;
	if (yych == 'u') goto tt304;
	goto tt75;
tt303:
	yych = *++YYCURSOR;
	if (yych == 'y') goto tt310;
	goto tt75;
tt304:
	yych = *++YYCURSOR;
	if (yych != 'n') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'r') goto tt75;
	++YYCURSOR;
#line 132 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("counter", T_TEMPLATELANG_KEY_COUNTER); }
#line 1082 "./templatelang_lexer.cpp"
tt310:
	yych = *++YYCURSOR;
	if (yych != 'a') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'r') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'i') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'b') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 's') goto tt75;
	++YYCURSOR;
#line 162 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("copyattribs", T_TEMPLATELANG_KEY_COPYATTRIBS); }
#line 1101 "./templatelang_lexer.cpp"
tt319:
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'r') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'i') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'b') goto tt75;
	yyaccept = 6;
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'n') goto tt325;
tt324:
#line 161 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("attrib", T_TEMPLATELANG_KEY_ATTRIB); }
#line 1117 "./templatelang_lexer.cpp"
tt325:
	yych = *++YYCURSOR;
	if (yych != 'o') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'm') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'a') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'n') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'g') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'l') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	++YYCURSOR;
#line 163 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("attribnomangle", T_TEMPLATELANG_KEY_ATTRIB_NOMANGLE); }
#line 1136 "./templatelang_lexer.cpp"
tt334:
	yych = *++YYCURSOR;
	if (yych == '_') goto tt415;
	goto tt75;
tt335:
	yych = *++YYCURSOR;
	if (yych == 'c') goto tt406;
	goto tt75;
tt336:
	yych = *++YYCURSOR;
	if (yych != ' ') goto tt75;
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto tt343;
	case 'f':	goto tt338;
	case 'h':	goto tt342;
	case 'l':	goto tt340;
	case 'n':	goto tt341;
	case 'v':	goto tt339;
	default:	goto tt75;
	}
tt338:
	yych = *++YYCURSOR;
	if (yych == 'e') goto tt394;
	goto tt75;
tt339:
	yych = *++YYCURSOR;
	if (yych == 'a') goto tt386;
	goto tt75;
tt340:
	yych = *++YYCURSOR;
	if (yych == 'i') goto tt377;
	goto tt75;
tt341:
	yych = *++YYCURSOR;
	if (yych == 'a') goto tt364;
	goto tt75;
tt342:
	yych = *++YYCURSOR;
	if (yych == 'a') goto tt355;
	goto tt75;
tt343:
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'r') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'i') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'b') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'q') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'u') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'a') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'l') goto tt75;
	++YYCURSOR;
#line 169 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("attribequal", T_TEMPLATELANG_KEY_IF_ATTRIBEQUAL); }
#line 1202 "./templatelang_lexer.cpp"
tt355:
	yych = *++YYCURSOR;
	if (yych != 's') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'a') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'r') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'i') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'b') goto tt75;
	++YYCURSOR;
#line 168 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("hasattrib", T_TEMPLATELANG_KEY_IF_HASATTRIB); }
#line 1221 "./templatelang_lexer.cpp"
tt364:
	yych = *++YYCURSOR;
	if (yych != 'm') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'd') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 's') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'm') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'p') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'y') goto tt75;
	++YYCURSOR;
#line 167 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("namedsetempty", T_TEMPLATELANG_KEY_IF_NAMEDSETEMPTY); }
#line 1248 "./templatelang_lexer.cpp"
tt377:
	yych = *++YYCURSOR;
	if (yych != 's') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'm') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'p') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'y') goto tt75;
	++YYCURSOR;
#line 166 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("listempty", T_TEMPLATELANG_KEY_IF_LISTEMPTY); }
#line 1267 "./templatelang_lexer.cpp"
tt386:
	yych = *++YYCURSOR;
	if (yych != 'r') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'q') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'u') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'a') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'l') goto tt75;
	++YYCURSOR;
#line 165 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("varequal", T_TEMPLATELANG_KEY_IF_VAREQUAL); }
#line 1284 "./templatelang_lexer.cpp"
tt394:
	yych = *++YYCURSOR;
	if (yych != 'a') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'u') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'r') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'q') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'u') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'a') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'l') goto tt75;
	++YYCURSOR;
#line 164 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("featureequal", T_TEMPLATELANG_KEY_IF_FEATUREEQUAL); }
#line 1309 "./templatelang_lexer.cpp"
tt406:
	yych = *++YYCURSOR;
	if (yych != 'c') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'o') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'u') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'n') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 't') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'e') goto tt75;
	yych = *++YYCURSOR;
	if (yych != 'r') goto tt75;
	++YYCURSOR;
#line 150 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("inccounter", T_TEMPLATELANG_KEY_INCCOUNTER); }
#line 1328 "./templatelang_lexer.cpp"
tt415:
	yych = *++YYCURSOR;
	if (yych != 'd') goto tt75;
	yych = *++YYCURSOR;
	if (yych != ' ') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	++YYCURSOR;
#line 128 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("id_d", T_TEMPLATELANG_KEY_ID_D); }
#line 1341 "./templatelang_lexer.cpp"
tt421:
	yych = *++YYCURSOR;
	if (yych != '}') goto tt75;
	++YYCURSOR;
#line 125 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN("}}", T_TEMPLATELANG_KEY_BB_CLOSE); }
#line 1348 "./templatelang_lexer.cpp"
}
#line 184 "./templatelang.re"



stringsq:
	tok = cur;

#line 1357 "./templatelang_lexer.cpp"
{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if (yych <= '&') {
		if (yych <= 0x00) goto tt430;
		if (yych == '\n') goto tt433;
		goto tt432;
	} else {
		if (yych <= '\'') goto tt426;
		if (yych == '\\') goto tt428;
		goto tt432;
	}
tt426:
	++YYCURSOR;
#line 190 "./templatelang.re"
	{ TEMPLATELANG_TOKEN_RETURN(STRING_MAGIC, T_TEMPLATELANG_STRING); }
#line 1374 "./templatelang_lexer.cpp"
tt428:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych <= 'b') {
		if (yych <= '3') {
			if (yych <= '&') {
				if (yych == '"') goto tt438;
			} else {
				if (yych <= '\'') goto tt440;
				if (yych >= '0') goto tt437;
			}
		} else {
			if (yych <= '[') {
				if (yych == '?') goto tt442;
			} else {
				if (yych <= '\\') goto tt444;
				if (yych <= '`') goto tt429;
				if (yych <= 'a') goto tt450;
				goto tt452;
			}
		}
	} else {
		if (yych <= 'r') {
			if (yych <= 'm') {
				if (yych == 'f') goto tt446;
			} else {
				if (yych <= 'n') goto tt458;
				if (yych >= 'r') goto tt448;
			}
		} else {
			if (yych <= 'u') {
				if (yych == 't') goto tt456;
			} else {
				if (yych <= 'v') goto tt454;
				if (yych == 'x') goto tt435;
			}
		}
	}
tt429:
#line 214 "./templatelang.re"
	{ yylval->pString->push_back(*tok);
			       goto stringsq; }
#line 1416 "./templatelang_lexer.cpp"
tt430:
	++YYCURSOR;
#line 213 "./templatelang.re"
	{ if (cur >= lim) { goto end; } }
#line 1421 "./templatelang_lexer.cpp"
tt432:
	yych = *++YYCURSOR;
	goto tt429;
tt433:
	++YYCURSOR;
#line 216 "./templatelang.re"
	{ yylval->pString->push_back('\n');
			       goto stringsq; }
#line 1430 "./templatelang_lexer.cpp"
tt435:
	yych = *++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto tt436;
		if (yych <= '9') goto tt463;
	} else {
		if (yych <= 'F') goto tt463;
		if (yych <= '`') goto tt436;
		if (yych <= 'f') goto tt463;
	}
tt436:
	YYCURSOR = YYMARKER;
	goto tt429;
tt437:
	yych = *++YYCURSOR;
	if (yych <= '/') goto tt436;
	if (yych <= '7') goto tt460;
	goto tt436;
tt438:
	++YYCURSOR;
#line 201 "./templatelang.re"
	{ yylval->pString->push_back('\"'); goto stringsq; }
#line 1453 "./templatelang_lexer.cpp"
tt440:
	++YYCURSOR;
#line 200 "./templatelang.re"
	{ yylval->pString->push_back('\''); goto stringsq; }
#line 1458 "./templatelang_lexer.cpp"
tt442:
	++YYCURSOR;
#line 199 "./templatelang.re"
	{ yylval->pString->push_back('\?'); goto stringsq; }
#line 1463 "./templatelang_lexer.cpp"
tt444:
	++YYCURSOR;
#line 198 "./templatelang.re"
	{ yylval->pString->push_back('\\'); goto stringsq; }
#line 1468 "./templatelang_lexer.cpp"
tt446:
	++YYCURSOR;
#line 197 "./templatelang.re"
	{ yylval->pString->push_back('\f'); goto stringsq; }
#line 1473 "./templatelang_lexer.cpp"
tt448:
	++YYCURSOR;
#line 196 "./templatelang.re"
	{ yylval->pString->push_back('\r'); goto stringsq; }
#line 1478 "./templatelang_lexer.cpp"
tt450:
	++YYCURSOR;
#line 195 "./templatelang.re"
	{ yylval->pString->push_back('\a'); goto stringsq; }
#line 1483 "./templatelang_lexer.cpp"
tt452:
	++YYCURSOR;
#line 194 "./templatelang.re"
	{ yylval->pString->push_back('\b'); goto stringsq; }
#line 1488 "./templatelang_lexer.cpp"
tt454:
	++YYCURSOR;
#line 193 "./templatelang.re"
	{ yylval->pString->push_back('\v'); goto stringsq; }
#line 1493 "./templatelang_lexer.cpp"
tt456:
	++YYCURSOR;
#line 192 "./templatelang.re"
	{ yylval->pString->push_back('\t'); goto stringsq; }
#line 1498 "./templatelang_lexer.cpp"
tt458:
	++YYCURSOR;
#line 191 "./templatelang.re"
	{ yylval->pString->push_back('\n'); goto stringsq; }
#line 1503 "./templatelang_lexer.cpp"
tt460:
	yych = *++YYCURSOR;
	if (yych <= '/') goto tt436;
	if (yych >= '8') goto tt436;
	++YYCURSOR;
#line 202 "./templatelang.re"
	{ tok += 1; // Go past SLASH 
		    std::string mystr;
		    getString(mystr);
		    yylval->pString->push_back(octal2char(mystr.c_str())); 
		    goto stringsq; }
#line 1515 "./templatelang_lexer.cpp"
tt463:
	yych = *++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto tt436;
		if (yych >= ':') goto tt436;
	} else {
		if (yych <= 'F') goto tt464;
		if (yych <= '`') goto tt436;
		if (yych >= 'g') goto tt436;
	}
tt464:
	++YYCURSOR;
#line 207 "./templatelang.re"
	{ tok += 2; // Go past SLASH x
			       std::string mystr;
			       getString(mystr);
			       yylval->pString->push_back(hex2char(mystr.c_str()));
			       goto stringsq; 			     
                             }
#line 1535 "./templatelang_lexer.cpp"
}
#line 218 "./templatelang.re"



 end:
	return 0;
}


void TemplateLanguageScanner::addToken(void)
{
	yylval->setString(new std::string);
	const char *p;
	for (p = tok;
	     p != cur;
	     ++p) {
	     yylval->pString->push_back(*p);
	}
}

void TemplateLanguageScanner::addInteger(void)
{
	const unsigned int MAX_INTEGER_CHARS = 12;
	unsigned int cnt = cur - tok;
	if (cnt > MAX_INTEGER_CHARS) {
	   	std::string mystring;
		const char *p;
		for (p = tok;
		     p != cur;
	     	     ++p) {
		     mystring.push_back(*p);
		}
		yylval->setInteger(sz2longlong(mystring.c_str()));
		yylval->setString(new std::string(mystring));
        } else {
		char szInt[MAX_INTEGER_CHARS+1];

		const char *p;
		char *q = szInt;
		for (p = tok;
		     p != cur;
	     	     ++p) {
		     *q++ = *p;
		}
		*q = '\0';
		yylval->setInteger(sz2longlong(szInt));
		yylval->setString(new std::string(szInt));
	}
}

void TemplateLanguageScanner::getString(std::string& str)
{
	const char *p;
	for (p = tok;
	     p != cur;
	     ++p) {
	     str.push_back(*p);
	}
}

